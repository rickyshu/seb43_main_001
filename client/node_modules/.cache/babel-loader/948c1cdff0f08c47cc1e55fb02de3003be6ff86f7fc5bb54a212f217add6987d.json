{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport axios from 'axios';\n\n// 추후에 타입으로 이동\n\n// types\nimport { State, PortfolioCommentAPI, PortfolioCommentAPIArray } from '../types/index';\nexport const useDetailPageComment = state => {\n  _s();\n  // 추후에 API 파일로 이동하기\n  const getCommentData = async state => {\n    const commentData = await axios.get(`http://localhost:3003/${state}`);\n    return commentData.data;\n  };\n  const {\n    isLoading,\n    isError,\n    data,\n    error\n  } = useQuery({\n    queryKey: ['comment'],\n    queryFn: () => getCommentData(state)\n  });\n  return {\n    isLoading,\n    isError,\n    data,\n    error\n  };\n};\n_s(useDetailPageComment, \"rCudFd1hiR08fJ2zuPhSG8h1qdE=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","axios","State","PortfolioCommentAPI","PortfolioCommentAPIArray","useDetailPageComment","state","_s","getCommentData","commentData","get","data","isLoading","isError","error","queryKey","queryFn"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/hooks/useDetailPageComment.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\r\nimport axios from 'axios';\r\n\r\n// 추후에 타입으로 이동\r\n\r\n// types\r\nimport { State, PortfolioCommentAPI, PortfolioCommentAPIArray } from '../types/index';\r\ntype State = 'data' | 'pageInfo';\r\n\r\ntype PortfolioCommentAPI = {\r\n  portfolioCommentId: number;\r\n  userId: number;\r\n  portfolioId: number;\r\n  userName: string;\r\n  content: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n};\r\n\r\ntype PortfolioCommentAPIArray = PortfolioCommentAPI[];\r\n\r\nexport const useDetailPageComment = (state?: State) => {\r\n  // 추후에 API 파일로 이동하기\r\n  const getCommentData = async (state?: State): Promise<PortfolioCommentAPIArray> => {\r\n    const commentData = await axios.get(`http://localhost:3003/${state}`);\r\n    return commentData.data;\r\n  };\r\n\r\n  const { isLoading, isError, data, error } = useQuery({\r\n    queryKey: ['comment'],\r\n    queryFn: () => getCommentData(state),\r\n  });\r\n  return { isLoading, isError, data, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAEA;AACA,SAASC,KAAK,EAAEC,mBAAmB,EAAEC,wBAAwB,QAAQ,gBAAgB;AAerF,OAAO,MAAMC,oBAAoB,GAAIC,KAAa,IAAK;EAAAC,EAAA;EACrD;EACA,MAAMC,cAAc,GAAG,MAAOF,KAAa,IAAwC;IACjF,MAAMG,WAAW,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,yBAAwBJ,KAAM,EAAC,CAAC;IACrE,OAAOG,WAAW,CAACE,IAAI;EACzB,CAAC;EAED,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEF,IAAI;IAAEG;EAAM,CAAC,GAAGd,QAAQ,CAAC;IACnDe,QAAQ,EAAE,CAAC,SAAS,CAAC;IACrBC,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAACF,KAAK;EACrC,CAAC,CAAC;EACF,OAAO;IAAEM,SAAS;IAAEC,OAAO;IAAEF,IAAI;IAAEG;EAAM,CAAC;AAC5C,CAAC;AAACP,EAAA,CAZWF,oBAAoB;EAAA,QAOaL,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}