{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\components\\\\Detail\\\\Description.tsx\",\n  _s = $RefreshSig$();\nimport * as S from './Description.style';\n\n// custom hook\nimport { useGetPortfolio } from '../../hooks/useGetPortfolio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 상세 페이지 포트폴리오 상세 설명 컴포넌트\nfunction Description(_ref) {\n  _s();\n  let {\n    description\n  } = _ref;\n  // !: userId를 뽑아서 사용해야 한다 여기에선 Description만 추가된다.\n  const {\n    getPortfolioLoading,\n    getPortfolioError,\n    PortfolioInfo\n  } = useGetPortfolio(1);\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.DescriptionTitle, {\n      children: \"\\uD83D\\uDD0D Project Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.DescriptionText, {\n      children: \"Asana\\uB294 \\uBA85\\uC0C1\\uC774\\uB098 \\uC9D1\\uC911\\uC744 \\uC704\\uD574 \\uC790\\uC2E0\\uC774 \\uC8FC\\uB85C \\uB4E3\\uB294 \\uC74C\\uC545 \\uB9C1\\uD06C\\uB97C \\uC800\\uC7A5\\uD574 \\uD50C\\uB808\\uC774\\uB9AC\\uC2A4\\uD2B8\\uB97C \\uBCF4\\uC5EC\\uC8FC\\uACE0, \\uD50C\\uB808\\uC774 \\uD560 \\uC218 \\uC788\\uB294 url \\uB9C1\\uD06C \\uC800\\uC7A5\\uC18C \\uC11C\\uBE44\\uC2A4\\uC785\\uB2C8\\uB2E4. \\uC774\\uBC88 \\uD504\\uB85C\\uC81D\\uD2B8\\uB294 TypeScript\\uC640 GraphQL, next.js\\uC744 \\uACF5\\uBD80\\uD558\\uBA74\\uC11C, \\uAC04\\uB2E8\\uD55C \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uD558\\uB098 \\uB9CC\\uB4E4\\uC5B4 \\uBCF4\\uC544\\uC57C\\uACA0\\uB2E4 \\uB2E4\\uC9D0\\uC744 \\uD558\\uBA70 \\uC2DC\\uC791\\uD558\\uAC8C \\uB41C \\uC791\\uC5C5\\uC785\\uB2C8\\uB2E4. \\uC0AC\\uC6A9\\uC790\\uAC00 \\uD68C\\uC6D0\\uAC00\\uC785\\uC744\\uD558\\uACE0 \\uB85C\\uADF8\\uC778\\uC744 \\uD558\\uBA74 youtube\\uB098 sound cloud \\uB4F1\\uC5D0\\uC11C \\uBA85\\uC0C1\\uC74C\\uC545\\uC774\\uB098 \\uAC1C\\uC778\\uC774 \\uB9C8\\uC74C\\uC5D0\\uB4DC\\uB294 \\uC74C\\uC545 \\uB4F1\\uC758 \\uB9C1\\uD06C\\uB97C iframe url\\uC744 \\uC785\\uB825\\uD574 \\uC0DD\\uC131\\uD558\\uBA74, streams \\uD398\\uC774\\uC9C0\\uC5D0\\uC11C \\uC790\\uC2E0\\uC774 \\uB4F1\\uB85D\\uD55C \\uC74C\\uC545\\uC744 \\uAC10\\uC0C1 \\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC0DD\\uC131\\uD55C \\uC601\\uC0C1\\uB9C1\\uD06C\\uB294 \\uC0AD\\uC81C\\uC640 \\uC218\\uC815\\uC774 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Description, \"ZggT2cp+VPtJICeBW7v54ffqjlI=\", false, function () {\n  return [useGetPortfolio];\n});\n_c = Description;\nexport default Description;\nvar _c;\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"names":["S","useGetPortfolio","jsxDEV","_jsxDEV","Description","_ref","_s","description","getPortfolioLoading","getPortfolioError","PortfolioInfo","Container","children","DescriptionTitle","fileName","_jsxFileName","lineNumber","columnNumber","DescriptionText","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/components/Detail/Description.tsx"],"sourcesContent":["import * as S from './Description.style';\r\n\r\n// custom hook\r\nimport { useGetPortfolio } from '../../hooks/useGetPortfolio';\r\nimport { type } from 'os';\r\n\r\ntype DescriptionProps = {\r\n  description: string;\r\n};\r\n\r\n// 상세 페이지 포트폴리오 상세 설명 컴포넌트\r\nfunction Description({ description }: DescriptionProps) {\r\n  // !: userId를 뽑아서 사용해야 한다 여기에선 Description만 추가된다.\r\n  const { getPortfolioLoading, getPortfolioError, PortfolioInfo } = useGetPortfolio(1);\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.DescriptionTitle>🔍 Project Overview</S.DescriptionTitle>\r\n      <S.DescriptionText>\r\n        Asana는 명상이나 집중을 위해 자신이 주로 듣는 음악 링크를 저장해 플레이리스트를 보여주고,\r\n        플레이 할 수 있는 url 링크 저장소 서비스입니다. 이번 프로젝트는 TypeScript와 GraphQL,\r\n        next.js을 공부하면서, 간단한 프로젝트를 하나 만들어 보아야겠다 다짐을 하며 시작하게 된\r\n        작업입니다. 사용자가 회원가입을하고 로그인을 하면 youtube나 sound cloud 등에서 명상음악이나\r\n        개인이 마음에드는 음악 등의 링크를 iframe url을 입력해 생성하면, streams 페이지에서 자신이\r\n        등록한 음악을 감상 할 수 있습니다. 생성한 영상링크는 삭제와 수정이 가능합니다.\r\n      </S.DescriptionText>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default Description;\r\n"],"mappings":";;AAAA,OAAO,KAAKA,CAAC,MAAM,qBAAqB;;AAExC;AACA,SAASC,eAAe,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9D;AACA,SAASC,WAAWA,CAAAC,IAAA,EAAoC;EAAAC,EAAA;EAAA,IAAnC;IAAEC;EAA8B,CAAC,GAAAF,IAAA;EACpD;EACA,MAAM;IAAEG,mBAAmB;IAAEC,iBAAiB;IAAEC;EAAc,CAAC,GAAGT,eAAe,CAAC,CAAC,CAAC;EAEpF,oBACEE,OAAA,CAACH,CAAC,CAACW,SAAS;IAAAC,QAAA,gBACVT,OAAA,CAACH,CAAC,CAACa,gBAAgB;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC,eAC5Dd,OAAA,CAACH,CAAC,CAACkB,eAAe;MAAAN,QAAA,EAAC;IAOnB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAElB;AAACX,EAAA,CAjBQF,WAAW;EAAA,QAEgDH,eAAe;AAAA;AAAAkB,EAAA,GAF1Ef,WAAW;AAmBpB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}