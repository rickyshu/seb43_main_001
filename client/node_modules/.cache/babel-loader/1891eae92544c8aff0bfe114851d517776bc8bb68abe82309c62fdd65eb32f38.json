{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\components\\\\Portfolio\\\\DetailBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useRef } from 'react';\nimport * as S from './DetailBox.style';\nimport hljs from 'highlight.js/lib/core';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport python from 'highlight.js/lib/languages/python';\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport c from 'highlight.js/lib/languages/c';\nimport ReactQuill, { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { ImageResize } from 'quill-image-resize-module-ts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nQuill.register('modules/ImageResize', ImageResize);\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('python', python);\nhljs.registerLanguage('typescript', typescript);\nhljs.registerLanguage('c', c);\nconst DetailBox = _ref => {\n  _s();\n  let {\n    text,\n    content,\n    setContent\n  } = _ref;\n  const quillRef = useRef(null);\n  // 이미지 처리를 하는 핸들러\n  const imageHandler = () => {\n    console.log('에디터에서 이미지 버튼을 클릭하면 이 핸들러가 시작됩니다!');\n    if (!quillRef.current) return;\n    const quillInstance = quillRef.current.getEditor();\n    // 1. 이미지를 저장할 input type=file DOM을 만든다.\n    const input = document.createElement('input');\n    // 속성 써주기\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    input.click(); // 에디터 이미지버튼을 클릭하면 이 input이 클릭된다.\n    // input이 클릭되면 파일 선택창이 나타난다.\n\n    input.onchange = async () => {\n      const file = input.files[0];\n      const formData = new FormData();\n      formData.append('image', file);\n\n      // 이미지를 서버로 전송 (서버 엔드포인트 주소를 사용)\n      const response = await axios.post('YOUR_SERVER_API_URL', {\n        body: formData\n      });\n      const imageUrl = await response;\n      const range = quillInstance.getSelection(true);\n      quillInstance.insertEmbed(range.index, 'image', imageUrl);\n    };\n  };\n  const modules = useMemo(() => {\n    return {\n      // syntax: {\n      //   highlight: (text: any) => hljs.highlightAuto(text).value,\n      // },\n      toolbar: {\n        container: [[{\n          header: [1, 2, false]\n        }, {\n          header: '2'\n        }, {\n          font: [String]\n        }], [{\n          size: [String]\n        }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n          list: 'ordered'\n        }, {\n          list: 'bullet'\n        }, {\n          indent: '-1'\n        }, {\n          indent: '+1'\n        }], ['link', 'image', 'code-block'], ['clean']]\n        // handlers: {\n        //   image: imageHandler,\n        // },\n      },\n\n      // 이미지 조절 시 오류\n      ImageResize: {\n        modules: ['Resize', 'DisplaySize', 'Toolbar']\n      }\n    };\n  }, []);\n  const formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video', 'code-block'];\n  return /*#__PURE__*/_jsxDEV(S.DetailContainer, {\n    children: [/*#__PURE__*/_jsxDEV(S.Title, {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      ref: quillRef,\n      modules: modules,\n      onChange: setContent,\n      value: content,\n      theme: \"snow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(DetailBox, \"En3KIhU47UXH1knXzSz9t0Z/4RA=\");\n_c = DetailBox;\nexport default DetailBox;\nvar _c;\n$RefreshReg$(_c, \"DetailBox\");","map":{"version":3,"names":["React","useMemo","useRef","S","hljs","javascript","python","typescript","c","ReactQuill","Quill","ImageResize","axios","jsxDEV","_jsxDEV","register","registerLanguage","DetailBox","_ref","_s","text","content","setContent","quillRef","imageHandler","console","log","current","quillInstance","getEditor","input","document","createElement","setAttribute","click","onchange","file","files","formData","FormData","append","response","post","body","imageUrl","range","getSelection","insertEmbed","index","modules","toolbar","container","header","font","String","size","list","indent","formats","DetailContainer","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","value","theme","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/components/Portfolio/DetailBox.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport * as S from './DetailBox.style';\r\nimport hljs from 'highlight.js/lib/core';\r\nimport javascript from 'highlight.js/lib/languages/javascript';\r\nimport python from 'highlight.js/lib/languages/python';\r\nimport typescript from 'highlight.js/lib/languages/typescript';\r\nimport c from 'highlight.js/lib/languages/c';\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { ImageResize } from 'quill-image-resize-module-ts';\r\nimport axios from 'axios';\r\n\r\nQuill.register('modules/ImageResize', ImageResize);\r\n\r\ntype DetailBoxProps = {\r\n  text: string;\r\n  content: string;\r\n  setContent: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nhljs.registerLanguage('javascript', javascript);\r\nhljs.registerLanguage('python', python);\r\nhljs.registerLanguage('typescript', typescript);\r\nhljs.registerLanguage('c', c);\r\n\r\nconst DetailBox: React.FC<DetailBoxProps> = ({ text, content, setContent }) => {\r\n  const quillRef = useRef<ReactQuill | null>(null);\r\n  // 이미지 처리를 하는 핸들러\r\n  const imageHandler = () => {\r\n    console.log('에디터에서 이미지 버튼을 클릭하면 이 핸들러가 시작됩니다!');\r\n    if (!quillRef.current) return;\r\n    const quillInstance: any = quillRef.current.getEditor();\r\n    // 1. 이미지를 저장할 input type=file DOM을 만든다.\r\n    const input = document.createElement('input');\r\n    // 속성 써주기\r\n    input.setAttribute('type', 'file');\r\n    input.setAttribute('accept', 'image/*');\r\n    input.click(); // 에디터 이미지버튼을 클릭하면 이 input이 클릭된다.\r\n    // input이 클릭되면 파일 선택창이 나타난다.\r\n\r\n    input.onchange = async () => {\r\n      const file = input.files![0];\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n\r\n      // 이미지를 서버로 전송 (서버 엔드포인트 주소를 사용)\r\n      const response = await axios.post('YOUR_SERVER_API_URL', {\r\n        body: formData,\r\n      });\r\n\r\n      const imageUrl = await response;\r\n      const range = quillInstance.getSelection(true);\r\n      quillInstance.insertEmbed(range.index, 'image', imageUrl);\r\n    };\r\n  };\r\n\r\n  const modules = useMemo(() => {\r\n    return {\r\n      // syntax: {\r\n      //   highlight: (text: any) => hljs.highlightAuto(text).value,\r\n      // },\r\n      toolbar: {\r\n        container: [\r\n          [{ header: [1, 2, false] }, { header: '2' }, { font: [String] }],\r\n          [{ size: [String] }],\r\n          ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n          [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\r\n          ['link', 'image', 'code-block'],\r\n          ['clean'],\r\n        ],\r\n        // handlers: {\r\n        //   image: imageHandler,\r\n        // },\r\n      },\r\n      // 이미지 조절 시 오류\r\n      ImageResize: {\r\n        modules: ['Resize', 'DisplaySize', 'Toolbar'],\r\n      },\r\n    };\r\n  }, []);\r\n\r\n  const formats = [\r\n    'header',\r\n    'font',\r\n    'size',\r\n    'bold',\r\n    'italic',\r\n    'underline',\r\n    'strike',\r\n    'blockquote',\r\n    'list',\r\n    'bullet',\r\n    'indent',\r\n    'link',\r\n    'image',\r\n    'video',\r\n    'code-block',\r\n  ];\r\n\r\n  return (\r\n    <S.DetailContainer>\r\n      <S.Title>{text}</S.Title>\r\n      <ReactQuill\r\n        ref={quillRef}\r\n        modules={modules}\r\n        onChange={setContent}\r\n        value={content}\r\n        theme='snow'\r\n      />\r\n    </S.DetailContainer>\r\n  );\r\n};\r\n\r\nexport default DetailBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}