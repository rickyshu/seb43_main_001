{"ast":null,"code":"var _s = $RefreshSig$();\n// react-query\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\n\n// api\nimport { PortfolioCommentAPI } from '../api/client';\nconst {\n  deletePortfolioComment\n} = PortfolioCommentAPI;\nexport const useDeleteProtfolioComment = (userId, portfolioId, portfolioCommentId) => {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    mutate: deleteComment\n  } = useMutation({\n    mutationFn: deletePortfolioComment,\n    onSuccess: () => {\n      // !: userId를 받아와서 invalidate를 하면 될 듯하다.\n      queryClient.invalidateQueries(['commentsToPortfolio', userId], {\n        exact: true\n      });\n      queryClient.invalidateQueries(['comment', portfolioId], {\n        exact: true\n      });\n    }\n  });\n  const handleOnClickDeleteBtn = () => {\n    deleteComment({\n      portfolioCommentId\n    });\n  };\n  return {\n    handleOnClickDeleteBtn\n  };\n};\n_s(useDeleteProtfolioComment, \"gPsLWGuX/g/QZHO5VLi5dseXNm8=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useMutation","useQueryClient","PortfolioCommentAPI","deletePortfolioComment","useDeleteProtfolioComment","userId","portfolioId","portfolioCommentId","_s","queryClient","mutate","deleteComment","mutationFn","onSuccess","invalidateQueries","exact","handleOnClickDeleteBtn"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/hooks/useDeletePortfolioComment.ts"],"sourcesContent":["// react-query\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\n\r\n// api\r\nimport { PortfolioCommentAPI } from '../api/client';\r\n\r\nconst { deletePortfolioComment } = PortfolioCommentAPI;\r\n\r\nexport const useDeleteProtfolioComment = (\r\n  userId: number,\r\n  portfolioId: number,\r\n  portfolioCommentId: number,\r\n) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const { mutate: deleteComment } = useMutation({\r\n    mutationFn: deletePortfolioComment,\r\n    onSuccess: () => {\r\n      // !: userId를 받아와서 invalidate를 하면 될 듯하다.\r\n      queryClient.invalidateQueries(['commentsToPortfolio', userId], { exact: true });\r\n      queryClient.invalidateQueries(['comment', portfolioId], { exact: true });\r\n    },\r\n  });\r\n\r\n  const handleOnClickDeleteBtn = () => {\r\n    deleteComment({ portfolioCommentId });\r\n  };\r\n\r\n  return { handleOnClickDeleteBtn };\r\n};\r\n"],"mappings":";AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,uBAAuB;;AAEnE;AACA,SAASC,mBAAmB,QAAQ,eAAe;AAEnD,MAAM;EAAEC;AAAuB,CAAC,GAAGD,mBAAmB;AAEtD,OAAO,MAAME,yBAAyB,GAAGA,CACvCC,MAAc,EACdC,WAAmB,EACnBC,kBAA0B,KACvB;EAAAC,EAAA;EACH,MAAMC,WAAW,GAAGR,cAAc,CAAC,CAAC;EAEpC,MAAM;IAAES,MAAM,EAAEC;EAAc,CAAC,GAAGX,WAAW,CAAC;IAC5CY,UAAU,EAAET,sBAAsB;IAClCU,SAAS,EAAEA,CAAA,KAAM;MACf;MACAJ,WAAW,CAACK,iBAAiB,CAAC,CAAC,qBAAqB,EAAET,MAAM,CAAC,EAAE;QAAEU,KAAK,EAAE;MAAK,CAAC,CAAC;MAC/EN,WAAW,CAACK,iBAAiB,CAAC,CAAC,SAAS,EAAER,WAAW,CAAC,EAAE;QAAES,KAAK,EAAE;MAAK,CAAC,CAAC;IAC1E;EACF,CAAC,CAAC;EAEF,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnCL,aAAa,CAAC;MAAEJ;IAAmB,CAAC,CAAC;EACvC,CAAC;EAED,OAAO;IAAES;EAAuB,CAAC;AACnC,CAAC;AAACR,EAAA,CArBWJ,yBAAyB;EAAA,QAKhBH,cAAc,EAEAD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}