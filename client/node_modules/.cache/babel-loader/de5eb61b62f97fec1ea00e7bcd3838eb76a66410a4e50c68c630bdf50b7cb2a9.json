{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\components\\\\Detail\\\\Comment.tsx\",\n  _s = $RefreshSig$();\nimport * as S from './Comment.style';\n// react hooks\nimport React, { useState } from 'react';\n\n// react component\nimport CommentItem from './CommentItem';\nimport Loading from '../common/Loading';\n\n// custom hooks\nimport { useGetPortfolioComment } from '../../hooks/useGetPortfolioComment';\nimport { usePostPortfolioComment } from '../../hooks/usePostPortfolioComment';\n\n// redux\nimport { useAppSelector } from '../../hooks/reduxHook';\n\n// types\n\n// react-router-dom\nimport { useParams } from 'react-router-dom';\nimport { getUserIdFromAccessToken } from '../../utils/getUserIdFromAccessToken';\n\n// 상세 페이지 포트폴리오 댓글 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment() {\n  _s();\n  const [content, setContent] = useState('');\n  const {\n    portfolioId\n  } = useParams();\n  const token = useAppSelector(state => state.login.accessToken);\n  const isLogin = useAppSelector(state => state.login.isLogin);\n  const userId = getUserIdFromAccessToken(isLogin, token);\n  const {\n    PortfoliocommentLoading,\n    PortfolioCommentData\n  } = useGetPortfolioComment(Number(portfolioId));\n\n  // !: 태민님의 답변에 따라 수정을 해야 함!\n  const {\n    postCommentAction\n  } = usePostPortfolioComment();\n  const handleSubmit = event => {\n    event.preventDefault();\n    postCommentAction(Number(portfolioId), content);\n    setContent('');\n  };\n  const handleCommentChange = event => {\n    setContent(event.target.value);\n  };\n\n  // !: data가 없을 때 어떻게 표시되는지 꼭 확인해야 한다.\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: /*#__PURE__*/_jsxDEV(S.CommentWrapper, {\n      children: [PortfoliocommentLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(S.CommentShow, {\n        children: (PortfolioCommentData !== null && PortfolioCommentData !== void 0 ? PortfolioCommentData : []).map(_ref => {\n          let {\n            userId,\n            content,\n            createdAt,\n            userName,\n            portfolioCommentId,\n            portfolioId\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(CommentItem, {\n            userId: userId,\n            content: content,\n            createdAt: createdAt,\n            userName: userName,\n            portfolioCommentId: portfolioCommentId,\n            portfolioId: portfolioId\n          }, userId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.CommentForm, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(S.CommentArea, {\n          placeholder: \"Enter your comment here\",\n          value: content,\n          onChange: handleCommentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.YellowBtnCustom, {\n          children: \"COMMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"e3ettlgyOQMSe82rE/g7sB6bYfU=\", false, function () {\n  return [useParams, useAppSelector, useAppSelector, useGetPortfolioComment, usePostPortfolioComment];\n});\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["S","React","useState","CommentItem","Loading","useGetPortfolioComment","usePostPortfolioComment","useAppSelector","useParams","getUserIdFromAccessToken","jsxDEV","_jsxDEV","Comment","_s","content","setContent","portfolioId","token","state","login","accessToken","isLogin","userId","PortfoliocommentLoading","PortfolioCommentData","Number","postCommentAction","handleSubmit","event","preventDefault","handleCommentChange","target","value","Container","children","CommentWrapper","fileName","_jsxFileName","lineNumber","columnNumber","CommentShow","map","_ref","createdAt","userName","portfolioCommentId","CommentForm","onSubmit","CommentArea","placeholder","onChange","YellowBtnCustom","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/components/Detail/Comment.tsx"],"sourcesContent":["import * as S from './Comment.style';\r\n// react hooks\r\nimport React, { useState } from 'react';\r\n\r\n// react component\r\nimport CommentItem from './CommentItem';\r\nimport Loading from '../common/Loading';\r\n\r\n// custom hooks\r\nimport { useGetPortfolioComment } from '../../hooks/useGetPortfolioComment';\r\nimport { usePostPortfolioComment } from '../../hooks/usePostPortfolioComment';\r\n\r\n// redux\r\nimport { useAppSelector } from '../../hooks/reduxHook';\r\n\r\n// types\r\nimport { GetPortfolioCommentById } from '../../types/index';\r\n\r\n// react-router-dom\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { getUserIdFromAccessToken } from '../../utils/getUserIdFromAccessToken';\r\n\r\n// 상세 페이지 포트폴리오 댓글 컴포넌트\r\nfunction Comment() {\r\n  const [content, setContent] = useState<string>('');\r\n  const { portfolioId } = useParams();\r\n  const token = useAppSelector((state) => state.login.accessToken);\r\n  const isLogin = useAppSelector((state) => state.login.isLogin);\r\n\r\n  const userId = getUserIdFromAccessToken(isLogin, token);\r\n\r\n  const { PortfoliocommentLoading, PortfolioCommentData } = useGetPortfolioComment(\r\n    Number(portfolioId!),\r\n  );\r\n\r\n  // !: 태민님의 답변에 따라 수정을 해야 함!\r\n  const { postCommentAction } = usePostPortfolioComment();\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    postCommentAction(Number(portfolioId), content);\r\n    setContent('');\r\n  };\r\n\r\n  const handleCommentChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setContent(event.target.value);\r\n  };\r\n\r\n  // !: data가 없을 때 어떻게 표시되는지 꼭 확인해야 한다.\r\n  return (\r\n    <S.Container>\r\n      <S.CommentWrapper>\r\n        {PortfoliocommentLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <S.CommentShow>\r\n            {(PortfolioCommentData ?? []).map(\r\n              ({\r\n                userId,\r\n                content,\r\n                createdAt,\r\n                userName,\r\n                portfolioCommentId,\r\n                portfolioId,\r\n              }: GetPortfolioCommentById) => {\r\n                return (\r\n                  <CommentItem\r\n                    key={userId}\r\n                    userId={userId}\r\n                    content={content}\r\n                    createdAt={createdAt}\r\n                    userName={userName}\r\n                    portfolioCommentId={portfolioCommentId}\r\n                    portfolioId={portfolioId}\r\n                  />\r\n                );\r\n              },\r\n            )}\r\n          </S.CommentShow>\r\n        )}\r\n        <S.CommentForm onSubmit={handleSubmit}>\r\n          <S.CommentArea\r\n            placeholder='Enter your comment here'\r\n            value={content}\r\n            onChange={handleCommentChange}\r\n          />\r\n          <S.YellowBtnCustom>COMMENT</S.YellowBtnCustom>\r\n        </S.CommentForm>\r\n      </S.CommentWrapper>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}