{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\components\\\\Detail\\\\CommentItem.tsx\",\n  _s = $RefreshSig$();\nimport * as S from './CommentItem.style';\n\n// react hooks\nimport { useState } from 'react';\n\n// react-query\nimport { useMutation } from '@tanstack/react-query';\n\n// axios\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 상세 페이지 포트폴리오 댓글 아이템 컴포넌트\nfunction CommentItem(_ref) {\n  _s();\n  let {\n    content,\n    createdAt,\n    userName,\n    userId,\n    portfolioCommentId,\n    portfolioId\n  } = _ref;\n  const [onEdit, setOnEdit] = useState(false);\n  const [editInput, setEditInput] = useState('');\n  const patchComment = {\n    portfolioCommentId: 1,\n    userId,\n    portfolioId: 1,\n    content: '1번 수정 댓글'\n  };\n  const upDateMutation = useMutation({\n    mutationFn: patchComment => {\n      return axios.patch('http://localhost:3003/', {});\n    }\n  });\n  const handleComfirm = () => {\n    // 여기에서 useMutation을 진행하면 될듯 하다.(comment에 patch를 진행한다)\n    // editInput값을 input으로 patch를 진행한다.(userId로 수정을 해야 하나?)\n    // 그럼 props로 userId를 받아야 할 수도 있음 참고해라!patch까지 진행하자\n    // isAuth를 통해 수정 삭제 버튼들을 보일 수 있다.\n    upDateMutation.mutate();\n    setOnEdit(false);\n  };\n  const handleEditArea = event => {\n    setEditInput(event.target.value);\n  };\n\n  //\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.Update, {\n      children: [/*#__PURE__*/_jsxDEV(S.DelBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), !onEdit && /*#__PURE__*/_jsxDEV(S.EditBtn, {\n        onClick: () => setOnEdit(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), onEdit && /*#__PURE__*/_jsxDEV(S.ComfirmBtn, {\n        onClick: handleComfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), onEdit ? /*#__PURE__*/_jsxDEV(S.EditArea, {\n      placeholder: \"Enter your comment here\",\n      value: editInput,\n      onChange: handleEditArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(S.Content, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(S.CreateAt, {\n      children: [createdAt, \" \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentItem, \"Uw9HSDGIusvQA9zK93FdU6VgR40=\", false, function () {\n  return [useMutation];\n});\n_c = CommentItem;\nexport default CommentItem;\nvar _c;\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"names":["S","useState","useMutation","axios","jsxDEV","_jsxDEV","CommentItem","_ref","_s","content","createdAt","userName","userId","portfolioCommentId","portfolioId","onEdit","setOnEdit","editInput","setEditInput","patchComment","upDateMutation","mutationFn","patch","handleComfirm","mutate","handleEditArea","event","target","value","Container","children","Update","DelBtn","fileName","_jsxFileName","lineNumber","columnNumber","EditBtn","onClick","ComfirmBtn","EditArea","placeholder","onChange","Content","CreateAt","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/components/Detail/CommentItem.tsx"],"sourcesContent":["import * as S from './CommentItem.style';\r\n\r\n// react hooks\r\nimport { useState } from 'react';\r\n\r\n// react-query\r\nimport { useMutation } from '@tanstack/react-query';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\ntype CommentItemProps = {\r\n  portfolioId: number;\r\n  portfolioCommentId: number;\r\n  userId: number;\r\n  content: string;\r\n  createdAt: string;\r\n  userName: string;\r\n};\r\n\r\n// 상세 페이지 포트폴리오 댓글 아이템 컴포넌트\r\nfunction CommentItem({\r\n  content,\r\n  createdAt,\r\n  userName,\r\n  userId,\r\n  portfolioCommentId,\r\n  portfolioId,\r\n}: CommentItemProps) {\r\n  const [onEdit, setOnEdit] = useState<boolean>(false);\r\n  const [editInput, setEditInput] = useState<string>('');\r\n\r\n  const patchComment = {\r\n    portfolioCommentId: 1,\r\n    userId,\r\n    portfolioId: 1,\r\n    content: '1번 수정 댓글',\r\n  };\r\n\r\n  const upDateMutation = useMutation({\r\n    mutationFn: (patchComment) => {\r\n      return axios.patch('http://localhost:3003/', {});\r\n    },\r\n  });\r\n\r\n  const handleComfirm = () => {\r\n    // 여기에서 useMutation을 진행하면 될듯 하다.(comment에 patch를 진행한다)\r\n    // editInput값을 input으로 patch를 진행한다.(userId로 수정을 해야 하나?)\r\n    // 그럼 props로 userId를 받아야 할 수도 있음 참고해라!patch까지 진행하자\r\n    // isAuth를 통해 수정 삭제 버튼들을 보일 수 있다.\r\n    upDateMutation.mutate();\r\n    setOnEdit(false);\r\n  };\r\n\r\n  const handleEditArea = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setEditInput(event.target.value);\r\n  };\r\n\r\n  //\r\n  return (\r\n    <S.Container>\r\n      <S.Update>\r\n        <S.DelBtn />\r\n        {!onEdit && <S.EditBtn onClick={() => setOnEdit(true)} />}\r\n        {onEdit && <S.ComfirmBtn onClick={handleComfirm} />}\r\n      </S.Update>\r\n      {onEdit ? (\r\n        <S.EditArea\r\n          placeholder='Enter your comment here'\r\n          value={editInput}\r\n          onChange={handleEditArea}\r\n        />\r\n      ) : (\r\n        <S.Content>{content}</S.Content>\r\n      )}\r\n      <S.CreateAt>\r\n        {createdAt} {userName}\r\n      </S.CreateAt>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default CommentItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}