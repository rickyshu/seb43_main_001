{"ast":null,"code":"var _s = $RefreshSig$();\n// react-query\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\n\n// axios\nimport axios from 'axios';\n\n// typess\n\nexport const usePostPortfolioComment = portfolioId => {\n  _s();\n  // !: URL Path 추가 확인 필요함!\n  const PostCommentData = async _ref => {\n    let {\n      portfolioId,\n      postComment\n    } = _ref;\n    return await axios.post(`${process.env.REACT_APP_API_URL}/api/portfoliocomments/portfolios/${portfolioId}`, postComment);\n  };\n  const queryClient = useQueryClient();\n  const {\n    mutate: postComment\n  } = useMutation({\n    // 위 타입을 지정해줘야 함!\n    mutationFn: PostCommentData,\n    onSuccess: () => {\n      // * setData로 특정 id에 해당 하는 데이터 사전 처리도 가능할듯!\n      queryClient.invalidateQueries(['comment']);\n    },\n    onError: error => {\n      // *: error 헨들링 하기\n      console.log(error);\n    }\n  });\n  const handlePortfolioSubmitComment = event => {\n    event.preventDefault();\n    setComments('');\n  };\n  return {\n    postComment\n  };\n};\n_s(usePostPortfolioComment, \"O0BKodjUXSLmWYYptycM3DjlNes=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useMutation","useQueryClient","axios","usePostPortfolioComment","portfolioId","_s","PostCommentData","_ref","postComment","post","process","env","REACT_APP_API_URL","queryClient","mutate","mutationFn","onSuccess","invalidateQueries","onError","error","console","log","handlePortfolioSubmitComment","event","preventDefault","setComments"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/hooks/usePostPortfolioComment.ts"],"sourcesContent":["// react-query\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\n// typess\r\nimport { PostPortfolioComment } from '../types/index';\r\n\r\ntype usePostPortfolioCommentProps = {\r\n  portfolioId: string;\r\n  postComment: PostPortfolioComment;\r\n};\r\n\r\nexport const usePostPortfolioComment = (portfolioId: string) => {\r\n  // !: URL Path 추가 확인 필요함!\r\n  const PostCommentData = async ({ portfolioId, postComment }: usePostPortfolioCommentProps) => {\r\n    return await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/portfoliocomments/portfolios/${portfolioId}`,\r\n      postComment,\r\n    );\r\n  };\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const { mutate: postComment } = useMutation({\r\n    // 위 타입을 지정해줘야 함!\r\n    mutationFn: PostCommentData,\r\n    onSuccess: () => {\r\n      // * setData로 특정 id에 해당 하는 데이터 사전 처리도 가능할듯!\r\n      queryClient.invalidateQueries(['comment']);\r\n    },\r\n    onError: (error) => {\r\n      // *: error 헨들링 하기\r\n      console.log(error);\r\n    },\r\n  });\r\n\r\n  const handlePortfolioSubmitComment = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setComments('');\r\n  };\r\n  return { postComment };\r\n};\r\n"],"mappings":";AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,uBAAuB;;AAEnE;AACA,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAQA,OAAO,MAAMC,uBAAuB,GAAIC,WAAmB,IAAK;EAAAC,EAAA;EAC9D;EACA,MAAMC,eAAe,GAAG,MAAAC,IAAA,IAAsE;IAAA,IAA/D;MAAEH,WAAW;MAAEI;IAA0C,CAAC,GAAAD,IAAA;IACvF,OAAO,MAAML,KAAK,CAACO,IAAI,CACpB,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,qCAAoCR,WAAY,EAAC,EAClFI,WACF,CAAC;EACH,CAAC;EAED,MAAMK,WAAW,GAAGZ,cAAc,CAAC,CAAC;EAEpC,MAAM;IAAEa,MAAM,EAAEN;EAAY,CAAC,GAAGR,WAAW,CAAC;IAC1C;IACAe,UAAU,EAAET,eAAe;IAC3BU,SAAS,EAAEA,CAAA,KAAM;MACf;MACAH,WAAW,CAACI,iBAAiB,CAAC,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IACDC,OAAO,EAAGC,KAAK,IAAK;MAClB;MACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC,CAAC;EAEF,MAAMG,4BAA4B,GAAIC,KAAuC,IAAK;IAChFA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EACD,OAAO;IAAEjB;EAAY,CAAC;AACxB,CAAC;AAACH,EAAA,CA7BWF,uBAAuB;EAAA,QASdF,cAAc,EAEFD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}