{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\layout\\\\header\\\\Toggle.tsx\",\n  _s = $RefreshSig$();\n// react Hooks\nimport { useState } from 'react';\n// redux Hooks\nimport { useAppDispatch } from '../../hooks/reduxHook';\nimport { changeTheme } from '../../store/slice/themeSlice';\n// styled-component\nimport * as S from '../header/Toggle.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toggle = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const [isChecked, setIsChecked] = useState(false);\n  const handleToggle = () => {\n    dispatch(changeTheme());\n  };\n  return /*#__PURE__*/_jsxDEV(S.StyledToggle, {\n    onClick: handleToggle,\n    children: /*#__PURE__*/_jsxDEV(S.ToggleSwitch, {\n      isChecked: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Toggle, \"gYY8XehC+vFQmG8MpRgEgogNiq4=\", false, function () {\n  return [useAppDispatch];\n});\n_c = Toggle;\nexport default Toggle;\nvar _c;\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"names":["useState","useAppDispatch","changeTheme","S","jsxDEV","_jsxDEV","Toggle","_s","dispatch","isChecked","setIsChecked","handleToggle","StyledToggle","onClick","children","ToggleSwitch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/layout/header/Toggle.tsx"],"sourcesContent":["// react Hooks\r\nimport { useState } from 'react';\r\n// redux Hooks\r\nimport { useAppDispatch } from '../../hooks/reduxHook';\r\nimport { changeTheme } from '../../store/slice/themeSlice';\r\n// styled-component\r\nimport * as S from '../header/Toggle.style';\r\n\r\nconst Toggle = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    dispatch(changeTheme());\r\n  };\r\n\r\n  return (\r\n    <S.StyledToggle onClick={handleToggle}>\r\n      <S.ToggleSwitch isChecked={isChecked} />\r\n    </S.StyledToggle>\r\n  );\r\n};\r\n\r\nexport default Toggle;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC;AACA,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,WAAW,QAAQ,8BAA8B;AAC1D;AACA,OAAO,KAAKC,CAAC,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGP,cAAc,CAAC,CAAC;EAEjC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzBH,QAAQ,CAACN,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACEG,OAAA,CAACF,CAAC,CAACS,YAAY;IAACC,OAAO,EAAEF,YAAa;IAAAG,QAAA,eACpCT,OAAA,CAACF,CAAC,CAACY,YAAY;MAACN,SAAS,EAAEA;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAErB,CAAC;AAACZ,EAAA,CAdID,MAAM;EAAA,QACOL,cAAc;AAAA;AAAAmB,EAAA,GAD3Bd,MAAM;AAgBZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}