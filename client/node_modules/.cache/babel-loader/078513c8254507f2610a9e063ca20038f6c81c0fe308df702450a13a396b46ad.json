{"ast":null,"code":"var _s = $RefreshSig$();\n// react-query\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\n\n// types\n\n// api\nimport { PortfolioCommentAPI } from '../api/client';\nconst {\n  patchPortfolioComment\n} = PortfolioCommentAPI;\n\n// react hook\n\n// axios\nimport axios from 'axios';\nexport const usePatchPortfolioComment = _ref => {\n  _s();\n  let {\n    portfolioCommentId,\n    userId,\n    portfolioId\n  } = _ref;\n  // !: API 파일로 이동해야 함\n  const PatchCommentData = async _ref2 => {\n    let {\n      portfolioCommentId,\n      userId,\n      portfolioId,\n      content\n    } = _ref2;\n    return await axios.patch(`${process.env.REACT_APP_API_URL}/api/portfoliocomments/${portfolioCommentId}`, {\n      portfolioCommentId,\n      userId,\n      portfolioId,\n      content\n    });\n  };\n  const queryClient = useQueryClient();\n  const {\n    mutate: PatchPortfolioComment\n  } = useMutation({\n    mutationFn: PatchCommentData,\n    onSuccess: () => {\n      // setqueryDAta[comment,protido.id];\n      // !: 옵션 추가 및 다른 것으로 수정해야 함!\n      queryClient.invalidateQueries(['comment']);\n    },\n    onError: error => {\n      console.log(error);\n    }\n  });\n  const patchCommentAction = content => {\n    PatchPortfolioComment({\n      portfolioCommentId,\n      userId,\n      portfolioId,\n      content\n    });\n  };\n  return {\n    patchCommentAction\n  };\n};\n_s(usePatchPortfolioComment, \"wSlfDGGo+VUzv5qdFAqcMXasO94=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useMutation","useQueryClient","PortfolioCommentAPI","patchPortfolioComment","axios","usePatchPortfolioComment","_ref","_s","portfolioCommentId","userId","portfolioId","PatchCommentData","_ref2","content","patch","process","env","REACT_APP_API_URL","queryClient","mutate","PatchPortfolioComment","mutationFn","onSuccess","invalidateQueries","onError","error","console","log","patchCommentAction"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/hooks/usePatchPortfolioComment.ts"],"sourcesContent":["// react-query\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\n\r\n// types\r\nimport { PatchPortfolioComment } from '../types';\r\n\r\n// api\r\nimport { PortfolioCommentAPI } from '../api/client';\r\n\r\nconst { patchPortfolioComment } = PortfolioCommentAPI;\r\n\r\n// react hook\r\nimport { useState } from 'react';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\ntype usePatchPortfolioCommentParams = {\r\n  userId: number;\r\n  portfolioCommentId: number;\r\n  portfolioId: number;\r\n};\r\n\r\nexport const usePatchPortfolioComment = ({\r\n  portfolioCommentId,\r\n  userId,\r\n  portfolioId,\r\n}: usePatchPortfolioCommentParams) => {\r\n  // !: API 파일로 이동해야 함\r\n  const PatchCommentData = async ({\r\n    portfolioCommentId,\r\n    userId,\r\n    portfolioId,\r\n    content,\r\n  }: PatchPortfolioComment) => {\r\n    return await axios.patch(\r\n      `${process.env.REACT_APP_API_URL}/api/portfoliocomments/${portfolioCommentId}`,\r\n      {\r\n        portfolioCommentId,\r\n        userId,\r\n        portfolioId,\r\n        content,\r\n      },\r\n    );\r\n  };\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const { mutate: PatchPortfolioComment } = useMutation({\r\n    mutationFn: PatchCommentData,\r\n    onSuccess: () => {\r\n      // setqueryDAta[comment,protido.id];\r\n      // !: 옵션 추가 및 다른 것으로 수정해야 함!\r\n      queryClient.invalidateQueries(['comment']);\r\n    },\r\n    onError: (error) => {\r\n      console.log(error);\r\n    },\r\n  });\r\n  const patchCommentAction = (content: string) => {\r\n    PatchPortfolioComment({ portfolioCommentId, userId, portfolioId, content });\r\n  };\r\n\r\n  return { patchCommentAction };\r\n};\r\n"],"mappings":";AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,uBAAuB;;AAEnE;;AAGA;AACA,SAASC,mBAAmB,QAAQ,eAAe;AAEnD,MAAM;EAAEC;AAAsB,CAAC,GAAGD,mBAAmB;;AAErD;;AAGA;AACA,OAAOE,KAAK,MAAM,OAAO;AAQzB,OAAO,MAAMC,wBAAwB,GAAGC,IAAA,IAIF;EAAAC,EAAA;EAAA,IAJG;IACvCC,kBAAkB;IAClBC,MAAM;IACNC;EAC8B,CAAC,GAAAJ,IAAA;EAC/B;EACA,MAAMK,gBAAgB,GAAG,MAAAC,KAAA,IAKI;IAAA,IALG;MAC9BJ,kBAAkB;MAClBC,MAAM;MACNC,WAAW;MACXG;IACqB,CAAC,GAAAD,KAAA;IACtB,OAAO,MAAMR,KAAK,CAACU,KAAK,CACrB,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,0BAAyBT,kBAAmB,EAAC,EAC9E;MACEA,kBAAkB;MAClBC,MAAM;MACNC,WAAW;MACXG;IACF,CACF,CAAC;EACH,CAAC;EAED,MAAMK,WAAW,GAAGjB,cAAc,CAAC,CAAC;EAEpC,MAAM;IAAEkB,MAAM,EAAEC;EAAsB,CAAC,GAAGpB,WAAW,CAAC;IACpDqB,UAAU,EAAEV,gBAAgB;IAC5BW,SAAS,EAAEA,CAAA,KAAM;MACf;MACA;MACAJ,WAAW,CAACK,iBAAiB,CAAC,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IACDC,OAAO,EAAGC,KAAK,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC,CAAC;EACF,MAAMG,kBAAkB,GAAIf,OAAe,IAAK;IAC9CO,qBAAqB,CAAC;MAAEZ,kBAAkB;MAAEC,MAAM;MAAEC,WAAW;MAAEG;IAAQ,CAAC,CAAC;EAC7E,CAAC;EAED,OAAO;IAAEe;EAAmB,CAAC;AAC/B,CAAC;AAACrB,EAAA,CAzCWF,wBAAwB;EAAA,QAuBfJ,cAAc,EAEQD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}