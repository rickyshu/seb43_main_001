{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport { UserProfileAPI } from '../api/client';\nimport { useNavigate } from 'react-router-dom';\nconst {\n  getUserProfile\n} = UserProfileAPI;\nexport const useGetUserProfile = userId => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isLoading: getUserProfileLoading,\n    isError: getUserProfileError,\n    data: UserProfile\n  } = useQuery({\n    queryKey: ['UserProfile', userId],\n    queryFn: () => getUserProfile(userId),\n    onError: () => {\n      console.error('해당하는 유저를 찾을 수 없습니다.');\n      navigate('/*');\n    },\n    retry: (failureCount, error) => {\n      if (error.message === 'Request failed with status code 404') {\n        return false;\n      }\n      return failureCount < 5;\n    }\n  });\n  return {\n    getUserProfileLoading,\n    getUserProfileError,\n    UserProfile\n  };\n};\n_s(useGetUserProfile, \"0CEpCh7t19LMnx4CiIroJwhXNuo=\", false, function () {\n  return [useNavigate, useQuery];\n});","map":{"version":3,"names":["useQuery","UserProfileAPI","useNavigate","getUserProfile","useGetUserProfile","userId","_s","navigate","isLoading","getUserProfileLoading","isError","getUserProfileError","data","UserProfile","queryKey","queryFn","onError","console","error","retry","failureCount","message"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/hooks/useGetUserProfile.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\r\nimport { GetUserProfile } from '../types';\r\nimport { UserProfileAPI } from '../api/client';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { getUserProfile } = UserProfileAPI;\r\n\r\nexport const useGetUserProfile = (userId: number) => {\r\n  const navigate = useNavigate();\r\n  const {\r\n    isLoading: getUserProfileLoading,\r\n    isError: getUserProfileError,\r\n    data: UserProfile,\r\n  } = useQuery<GetUserProfile, Error>({\r\n    queryKey: ['UserProfile', userId],\r\n    queryFn: () => getUserProfile(userId),\r\n    onError: () => {\r\n      console.error('해당하는 유저를 찾을 수 없습니다.');\r\n      navigate('/*');\r\n    },\r\n    retry: (failureCount, error) => {\r\n      if (error.message === 'Request failed with status code 404') {\r\n        return false;\r\n      }\r\n      return failureCount < 5;\r\n    },\r\n  });\r\n  return { getUserProfileLoading, getUserProfileError, UserProfile };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAEhD,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAM;EAAEC;AAAe,CAAC,GAAGF,cAAc;AAEzC,OAAO,MAAMG,iBAAiB,GAAIC,MAAc,IAAK;EAAAC,EAAA;EACnD,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IACJM,SAAS,EAAEC,qBAAqB;IAChCC,OAAO,EAAEC,mBAAmB;IAC5BC,IAAI,EAAEC;EACR,CAAC,GAAGb,QAAQ,CAAwB;IAClCc,QAAQ,EAAE,CAAC,aAAa,EAAET,MAAM,CAAC;IACjCU,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAACE,MAAM,CAAC;IACrCW,OAAO,EAAEA,CAAA,KAAM;MACbC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;MACpCX,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC;IACDY,KAAK,EAAEA,CAACC,YAAY,EAAEF,KAAK,KAAK;MAC9B,IAAIA,KAAK,CAACG,OAAO,KAAK,qCAAqC,EAAE;QAC3D,OAAO,KAAK;MACd;MACA,OAAOD,YAAY,GAAG,CAAC;IACzB;EACF,CAAC,CAAC;EACF,OAAO;IAAEX,qBAAqB;IAAEE,mBAAmB;IAAEE;EAAY,CAAC;AACpE,CAAC;AAACP,EAAA,CArBWF,iBAAiB;EAAA,QACXF,WAAW,EAKxBF,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}