{"ast":null,"code":"var _s = $RefreshSig$();\n// react-query\nimport { useQuery } from '@tanstack/react-query';\n\n// axios\nimport axios from 'axios';\n\n// types\n\n// API\n\nexport const useGetPortfolioComment = portfolioId => {\n  _s();\n  // !: API 파일로 이동해야 함!\n  const getCommentData = async portfolioId => {\n    const commentData = await axios.get(`${process.env.REACT_APP_API_URL}/api/portfoliocomments/portfolios/${portfolioId}`);\n    return commentData.data.data;\n  };\n  const {\n    isLoading,\n    isError,\n    data,\n    error\n  } = useQuery({\n    queryKey: ['comment'],\n    queryFn: () => getCommentData,\n    onError: error => {\n      // *: error 헨들링을 해줘야 한다.\n      console.log('useQuery', error);\n    }\n  });\n  return {\n    isLoading,\n    isError,\n    data,\n    error\n  };\n};\n_s(useGetPortfolioComment, \"rCudFd1hiR08fJ2zuPhSG8h1qdE=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","axios","useGetPortfolioComment","portfolioId","_s","getCommentData","commentData","get","process","env","REACT_APP_API_URL","data","isLoading","isError","error","queryKey","queryFn","onError","console","log"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/hooks/useGetPortfolioComment.ts"],"sourcesContent":["// react-query\r\nimport { useQuery, QueryKey } from '@tanstack/react-query';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\n// types\r\nimport { GetPortfolioCommentById } from '../types/index';\r\n\r\n// API\r\nimport { getPortfolioComment } from '../api/client';\r\n\r\nexport const useGetPortfolioComment = (portfolioId: string) => {\r\n  // !: API 파일로 이동해야 함!\r\n  const getCommentData = async (portfolioId: string): Promise<GetPortfolioCommentById[]> => {\r\n    const commentData = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/api/portfoliocomments/portfolios/${portfolioId}`,\r\n    );\r\n    return commentData.data.data;\r\n  };\r\n\r\n  const { isLoading, isError, data, error } = useQuery<GetPortfolioCommentById[], Error>({\r\n    queryKey: ['comment'],\r\n    queryFn: () => getCommentData,\r\n    onError: (error) => {\r\n      // *: error 헨들링을 해줘야 한다.\r\n      console.log('useQuery', error);\r\n    },\r\n  });\r\n  return { isLoading, isError, data, error };\r\n};\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAkB,uBAAuB;;AAE1D;AACA,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAGA;;AAGA,OAAO,MAAMC,sBAAsB,GAAIC,WAAmB,IAAK;EAAAC,EAAA;EAC7D;EACA,MAAMC,cAAc,GAAG,MAAOF,WAAmB,IAAyC;IACxF,MAAMG,WAAW,GAAG,MAAML,KAAK,CAACM,GAAG,CAChC,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,qCAAoCP,WAAY,EACnF,CAAC;IACD,OAAOG,WAAW,CAACK,IAAI,CAACA,IAAI;EAC9B,CAAC;EAED,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEF,IAAI;IAAEG;EAAM,CAAC,GAAGd,QAAQ,CAAmC;IACrFe,QAAQ,EAAE,CAAC,SAAS,CAAC;IACrBC,OAAO,EAAEA,CAAA,KAAMX,cAAc;IAC7BY,OAAO,EAAGH,KAAK,IAAK;MAClB;MACAI,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEL,KAAK,CAAC;IAChC;EACF,CAAC,CAAC;EACF,OAAO;IAAEF,SAAS;IAAEC,OAAO;IAAEF,IAAI;IAAEG;EAAM,CAAC;AAC5C,CAAC;AAACV,EAAA,CAlBWF,sBAAsB;EAAA,QASWF,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}