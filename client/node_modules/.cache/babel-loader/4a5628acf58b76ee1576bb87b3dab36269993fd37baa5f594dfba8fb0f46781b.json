{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\components\\\\Detail\\\\Comment.tsx\",\n  _s = $RefreshSig$();\nimport * as S from './Comment.style';\n// react hooks\nimport React, { useState } from 'react';\n\n// react component\nimport CommentItem from './CommentItem';\nimport Loading from '../common/Loading';\n\n// custom hooks\nimport { useDetailPageComment } from '../../hooks/useDetailPageComment';\n\n// types\n\n// react-query\nimport { useMutation } from '@tanstack/react-query';\nimport axios from 'axios';\n\n// 상세 페이지 포트폴리오 댓글 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment() {\n  _s();\n  const [comments, setComments] = useState('');\n  const {\n    isLoading,\n    isError,\n    data,\n    error\n  } = useDetailPageComment('data');\n\n  // custom hook으로 따로 처리를 해야 한다.\n  // 여기에서 userId는 어디에서 담아 오는 것인가? JWT를 담아서 보내면 되는 것인가?\n  // 위와 같은 방법으로 유저를 식별하는 것인가?\n\n  const newComment = {\n    userId: 3,\n    portfolioId: 1,\n    content: comments\n  };\n  const newCommentMutation = useMutation({\n    mutationFn: newComment => {\n      return axios.post('http://localhost:3003/', {\n        newComment\n      });\n    }\n  });\n  const handleSubmit = event => {\n    event.preventDefault();\n    setComments('');\n  };\n  const handleCommentChange = event => {\n    setComments(event.target.value);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: /*#__PURE__*/_jsxDEV(S.CommentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(S.CommentShow, {\n        children: data === null || data === void 0 ? void 0 : data.map(comment => {\n          const {\n            userId,\n            content,\n            createdAt,\n            userName\n          } = comment;\n          return /*#__PURE__*/_jsxDEV(CommentItem, {\n            userId: userId,\n            content: content,\n            createdAt: createdAt,\n            userName: userName\n          }, userId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.CommentForm, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(S.CommentArea, {\n          placeholder: \"Enter your comment here\",\n          value: comments,\n          onChange: handleCommentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.YellowBtnCustom, {\n          children: \"COMMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"sLPiWv9EpVtEQ7ntmYNdnfAruEI=\", false, function () {\n  return [useDetailPageComment, useMutation];\n});\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["S","React","useState","CommentItem","Loading","useDetailPageComment","useMutation","axios","jsxDEV","_jsxDEV","Comment","_s","comments","setComments","isLoading","isError","data","error","newComment","userId","portfolioId","content","newCommentMutation","mutationFn","post","handleSubmit","event","preventDefault","handleCommentChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","Container","children","CommentWrapper","CommentShow","map","comment","createdAt","userName","CommentForm","onSubmit","CommentArea","placeholder","onChange","YellowBtnCustom","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/components/Detail/Comment.tsx"],"sourcesContent":["import * as S from './Comment.style';\r\n// react hooks\r\nimport React, { useState } from 'react';\r\n\r\n// react component\r\nimport CommentItem from './CommentItem';\r\nimport Loading from '../common/Loading';\r\n\r\n// custom hooks\r\nimport { useDetailPageComment } from '../../hooks/useDetailPageComment';\r\n\r\n// types\r\nimport { PortfolioCommentAPI } from '../../types/index';\r\n\r\n// react-query\r\nimport { useMutation } from '@tanstack/react-query';\r\n\r\nimport axios from 'axios';\r\n\r\n// 상세 페이지 포트폴리오 댓글 컴포넌트\r\nfunction Comment() {\r\n  const [comments, setComments] = useState<string>('');\r\n\r\n  const { isLoading, isError, data, error } = useDetailPageComment('data');\r\n\r\n  // custom hook으로 따로 처리를 해야 한다.\r\n  // 여기에서 userId는 어디에서 담아 오는 것인가? JWT를 담아서 보내면 되는 것인가?\r\n  // 위와 같은 방법으로 유저를 식별하는 것인가?\r\n\r\n  const newComment = {\r\n    userId: 3,\r\n    portfolioId: 1,\r\n    content: comments,\r\n  };\r\n\r\n  const newCommentMutation = useMutation({\r\n    mutationFn: (newComment) => {\r\n      return axios.post('http://localhost:3003/', {\r\n        newComment,\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    setComments('');\r\n  };\r\n\r\n  const handleCommentChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setComments(event.target.value);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.CommentWrapper>\r\n        <S.CommentShow>\r\n          {data?.map((comment: PortfolioCommentAPI) => {\r\n            const { userId, content, createdAt, userName } = comment;\r\n            return (\r\n              <CommentItem\r\n                key={userId}\r\n                userId={userId}\r\n                content={content}\r\n                createdAt={createdAt}\r\n                userName={userName}\r\n              />\r\n            );\r\n          })}\r\n        </S.CommentShow>\r\n        <S.CommentForm onSubmit={handleSubmit}>\r\n          <S.CommentArea\r\n            placeholder='Enter your comment here'\r\n            value={comments}\r\n            onChange={handleCommentChange}\r\n          />\r\n          <S.YellowBtnCustom>COMMENT</S.YellowBtnCustom>\r\n        </S.CommentForm>\r\n      </S.CommentWrapper>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}