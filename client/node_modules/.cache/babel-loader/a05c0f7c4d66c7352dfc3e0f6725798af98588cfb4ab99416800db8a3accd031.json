{"ast":null,"code":"// api\nimport { tokenClient } from '../api/client';\n\n// !: 추후에 constant에서 import 후 처리를 해야 한다\nconst REFRESH_URL = '';\nexport const getNewAccessToken = async () => {\n  // 만약 REFRESH URL로 반환이 된다면 굳이 header에 authorization을 넣을 필요는 없다! 이미 위에서 그렇게 처리를 해줬기 때문에!\n  const response = await tokenClient.post('https://example.com/api/token/refresh');\n\n  // 일반적으로 response.data 또는 response.data.accessToken과 같이 작성합니다.\n  const {\n    accessToken\n  } = response.data;\n\n  // 새로 발급된 accessToken을 반환합니다.\n  return {\n    accessToken\n  };\n};","map":{"version":3,"names":["tokenClient","REFRESH_URL","getNewAccessToken","response","post","accessToken","data"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/utils/getAccessToken.ts"],"sourcesContent":["// api\r\nimport { tokenClient } from '../api/client';\r\n\r\n// !: 추후에 constant에서 import 후 처리를 해야 한다\r\nconst REFRESH_URL = '';\r\n\r\nexport const getNewAccessToken = async () => {\r\n  // 만약 REFRESH URL로 반환이 된다면 굳이 header에 authorization을 넣을 필요는 없다! 이미 위에서 그렇게 처리를 해줬기 때문에!\r\n  const response = await tokenClient.post('https://example.com/api/token/refresh');\r\n\r\n  // 일반적으로 response.data 또는 response.data.accessToken과 같이 작성합니다.\r\n  const { accessToken } = response.data;\r\n\r\n  // 새로 발급된 accessToken을 반환합니다.\r\n  return { accessToken };\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,eAAe;;AAE3C;AACA,MAAMC,WAAW,GAAG,EAAE;AAEtB,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C;EACA,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACI,IAAI,CAAC,uCAAuC,CAAC;;EAEhF;EACA,MAAM;IAAEC;EAAY,CAAC,GAAGF,QAAQ,CAACG,IAAI;;EAErC;EACA,OAAO;IAAED;EAAY,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}