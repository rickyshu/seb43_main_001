{"ast":null,"code":"// react-query\n\n// axios\nimport axios from 'axios';\n\n// types\n\n// API\n\nexport const useGetPortfolioComment = portfolioId => {\n  // !: API 파일로 이동해야 함!\n  const getCommentData = async portfolioId => {\n    const commentData = await axios.get(`${process.env.REACT_APP_API_URL}/api/portfoliocomments/portfolios/${portfolioId}`);\n    return commentData.data.data;\n  };\n\n  // const { isLoading, isError, data, error } = useQuery<GetPortfolioCommentById[], Error>({\n  //   queryKey: ['comment'],\n  //   queryFn: () => getCommentData,\n  //   onError: (error) => {\n  //     // *: error 헨들링을 해줘야 한다.\n  //     console.log('useQuery', error);\n  //   },\n  // });\n  // return { isLoading, isError, data, error };\n};","map":{"version":3,"names":["axios","useGetPortfolioComment","portfolioId","getCommentData","commentData","get","process","env","REACT_APP_API_URL","data"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/hooks/useGetPortfolioComment.ts"],"sourcesContent":["// react-query\r\nimport { useQuery, QueryKey } from '@tanstack/react-query';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\n// types\r\nimport { GetPortfolioCommentById } from '../types/index';\r\n\r\n// API\r\nimport { getPortfolioComment } from '../api/client';\r\n\r\nexport const useGetPortfolioComment = (portfolioId: string) => {\r\n  // !: API 파일로 이동해야 함!\r\n  const getCommentData = async (portfolioId: string): Promise<GetPortfolioCommentById[]> => {\r\n    const commentData = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/api/portfoliocomments/portfolios/${portfolioId}`,\r\n    );\r\n    return commentData.data.data;\r\n  };\r\n\r\n  // const { isLoading, isError, data, error } = useQuery<GetPortfolioCommentById[], Error>({\r\n  //   queryKey: ['comment'],\r\n  //   queryFn: () => getCommentData,\r\n  //   onError: (error) => {\r\n  //     // *: error 헨들링을 해줘야 한다.\r\n  //     console.log('useQuery', error);\r\n  //   },\r\n  // });\r\n  // return { isLoading, isError, data, error };\r\n};\r\n"],"mappings":"AAAA;;AAGA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAGA;;AAGA,OAAO,MAAMC,sBAAsB,GAAIC,WAAmB,IAAK;EAC7D;EACA,MAAMC,cAAc,GAAG,MAAOD,WAAmB,IAAyC;IACxF,MAAME,WAAW,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAChC,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,qCAAoCN,WAAY,EACnF,CAAC;IACD,OAAOE,WAAW,CAACK,IAAI,CAACA,IAAI;EAC9B,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}