{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport themeReducer from '../store/slice/themeSlice';\nimport loginReducer from '../store/slice/loginSlice';\nimport { persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport editUserProfileSlice from './slice/editUserProfileSlice';\n\n// reducer를 여기에 추가하시면 됩니다\nconst rootReducer = combineReducers({\n  theme: themeReducer,\n  login: loginReducer,\n  editUserProfile: editUserProfileSlice\n});\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // persist 적용하기\n  whitelist: ['theme', 'login', 'editUserProfile']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","themeReducer","loginReducer","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","editUserProfileSlice","rootReducer","theme","login","editUserProfile","persistConfig","key","whitelist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/store/index.ts"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport themeReducer from '../store/slice/themeSlice';\r\nimport loginReducer from '../store/slice/loginSlice';\r\nimport { persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport editUserProfileSlice from './slice/editUserProfileSlice';\r\n\r\n// reducer를 여기에 추가하시면 됩니다\r\nconst rootReducer = combineReducers({\r\n  theme: themeReducer,\r\n  login: loginReducer,\r\n  editUserProfile: editUserProfileSlice,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n\r\n  // persist 적용하기\r\n  whitelist: ['theme', 'login', 'editUserProfile'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,cAAc,EAAEC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AACjG,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,oBAAoB,MAAM,8BAA8B;;AAE/D;AACA,MAAMC,WAAW,GAAGZ,eAAe,CAAC;EAClCa,KAAK,EAAEZ,YAAY;EACnBa,KAAK,EAAEZ,YAAY;EACnBa,eAAe,EAAEJ;AACnB,CAAC,CAAC;AAEF,MAAMK,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXP,OAAO;EAEP;EACAQ,SAAS,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,iBAAiB;AACjD,CAAC;AAED,MAAMC,gBAAgB,GAAGhB,cAAc,CAACa,aAAa,EAAEJ,WAAW,CAAC;AAEnE,MAAMQ,KAAK,GAAGrB,cAAc,CAAC;EAC3BsB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACrB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAIF,eAAeW,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}