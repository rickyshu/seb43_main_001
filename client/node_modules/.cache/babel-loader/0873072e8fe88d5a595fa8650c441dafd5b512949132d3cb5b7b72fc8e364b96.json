{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\components\\\\Detail\\\\Comment.tsx\",\n  _s = $RefreshSig$();\nimport * as S from './Comment.style';\n// react hooks\nimport React, { useState } from 'react';\n\n// react component\nimport CommentItem from './CommentItem';\nimport Loading from '../common/Loading';\n\n// custom hooks\nimport { useGetPortfolioComment } from '../../hooks/useGetPortfolioComment';\nimport { usePostPortfolioComment } from '../../hooks/usePostPortfolioComment';\n\n// types\n\n// react-query\n\n// react-router-dom\nimport { useParams } from 'react-router-dom';\n\n// axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 상세 페이지 포트폴리오 댓글 컴포넌트\nfunction Comment() {\n  _s();\n  const [comments, setComments] = useState('');\n  const {\n    id\n  } = useParams();\n\n  // !: portfolioId를 넣어야 한다. id 값은 무조건 존재할 수 밖에 없음?\n  const {\n    isLoading,\n    data\n  } = useGetPortfolioComment(id);\n\n  // !: 태민님의 답변에 따라 수정을 해야 함!\n  const {\n    postComment\n  } = usePostPortfolioComment(id);\n  const postCommentData = {\n    userId: 1,\n    portfolioId: 1,\n    content: comments\n  };\n\n  // const queryClient = useQueryClient();\n\n  // !: any 타입 변경이 필요하다! post이기 때문에 다른 방식으로 진행될듯!\n  // !: 추가 검색이 필요하다.\n\n  // const newCommentMutation = useMutation({\n  //   mutationFn: (newComment: any) => {\n  //     return axios.post('http://localhost:3003/data', {\n  //       ...newComment,\n  //     });\n  //   },\n  //   onSuccess: () => {\n  //     queryClient.invalidateQueries(['comment']);\n  //   },\n  //   onError: (error) => {\n  //     console.log(error);\n  //   },\n  // });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    postComment({\n      portfolioId: '1',\n      postComment: postCommentData\n    });\n    setComments('');\n  };\n  const handleCommentChange = event => {\n    setComments(event.target.value);\n  };\n\n  // !: data가 없을 때 어떻게 표시되는지 꼭 확인해야 한다.\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(S.CommentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(S.CommentShow, {\n        children: (data !== null && data !== void 0 ? data : []).map(comment => {\n          const {\n            userId,\n            content,\n            createdAt,\n            userName,\n            portfolioCommentId,\n            portfolioId\n          } = comment;\n          return /*#__PURE__*/_jsxDEV(CommentItem, {\n            userId: userId,\n            content: content,\n            createdAt: createdAt,\n            userName: userName,\n            portfolioCommentId: portfolioCommentId,\n            portfolioId: portfolioId\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.CommentForm, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(S.CommentArea, {\n          placeholder: \"Enter your comment here\",\n          value: comments,\n          onChange: handleCommentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.YellowBtnCustom, {\n          children: \"COMMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"wdHzeSVt3l1N+5/w5ksKdTzwqog=\", false, function () {\n  return [useParams, useGetPortfolioComment, usePostPortfolioComment];\n});\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["S","React","useState","CommentItem","Loading","useGetPortfolioComment","usePostPortfolioComment","useParams","jsxDEV","_jsxDEV","Comment","_s","comments","setComments","id","isLoading","data","postComment","postCommentData","userId","portfolioId","content","handleSubmit","event","preventDefault","handleCommentChange","target","value","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","CommentWrapper","CommentShow","map","comment","createdAt","userName","portfolioCommentId","CommentForm","onSubmit","CommentArea","placeholder","onChange","YellowBtnCustom","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/components/Detail/Comment.tsx"],"sourcesContent":["import * as S from './Comment.style';\r\n// react hooks\r\nimport React, { useState } from 'react';\r\n\r\n// react component\r\nimport CommentItem from './CommentItem';\r\nimport Loading from '../common/Loading';\r\n\r\n// custom hooks\r\nimport { useGetPortfolioComment } from '../../hooks/useGetPortfolioComment';\r\nimport { usePostPortfolioComment } from '../../hooks/usePostPortfolioComment';\r\n\r\n// types\r\nimport { GetPortfolioCommentById } from '../../types/index';\r\n\r\n// react-query\r\nimport { useQueryClient, useMutation } from '@tanstack/react-query';\r\n\r\n// react-router-dom\r\nimport { useParams } from 'react-router-dom';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\n// 상세 페이지 포트폴리오 댓글 컴포넌트\r\nfunction Comment() {\r\n  const [comments, setComments] = useState<string>('');\r\n\r\n  const { id } = useParams();\r\n\r\n  // !: portfolioId를 넣어야 한다. id 값은 무조건 존재할 수 밖에 없음?\r\n  const { isLoading, data } = useGetPortfolioComment(id!);\r\n\r\n  // !: 태민님의 답변에 따라 수정을 해야 함!\r\n  const { postComment } = usePostPortfolioComment(id!);\r\n\r\n  const postCommentData = {\r\n    userId: 1,\r\n    portfolioId: 1,\r\n    content: comments,\r\n  };\r\n\r\n  // const queryClient = useQueryClient();\r\n\r\n  // !: any 타입 변경이 필요하다! post이기 때문에 다른 방식으로 진행될듯!\r\n  // !: 추가 검색이 필요하다.\r\n\r\n  // const newCommentMutation = useMutation({\r\n  //   mutationFn: (newComment: any) => {\r\n  //     return axios.post('http://localhost:3003/data', {\r\n  //       ...newComment,\r\n  //     });\r\n  //   },\r\n  //   onSuccess: () => {\r\n  //     queryClient.invalidateQueries(['comment']);\r\n  //   },\r\n  //   onError: (error) => {\r\n  //     console.log(error);\r\n  //   },\r\n  // });\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    postComment({ portfolioId: '1', postComment: postCommentData });\r\n    setComments('');\r\n  };\r\n\r\n  const handleCommentChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setComments(event.target.value);\r\n  };\r\n\r\n  // !: data가 없을 때 어떻게 표시되는지 꼭 확인해야 한다.\r\n  return (\r\n    <S.Container>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <S.CommentWrapper>\r\n          <S.CommentShow>\r\n            {(data ?? []).map((comment: GetPortfolioCommentById) => {\r\n              const { userId, content, createdAt, userName, portfolioCommentId, portfolioId } =\r\n                comment;\r\n              return (\r\n                <CommentItem\r\n                  key={id}\r\n                  userId={userId}\r\n                  content={content}\r\n                  createdAt={createdAt}\r\n                  userName={userName}\r\n                  portfolioCommentId={portfolioCommentId}\r\n                  portfolioId={portfolioId}\r\n                />\r\n              );\r\n            })}\r\n          </S.CommentShow>\r\n          <S.CommentForm onSubmit={handleSubmit}>\r\n            <S.CommentArea\r\n              placeholder='Enter your comment here'\r\n              value={comments}\r\n              onChange={handleCommentChange}\r\n            />\r\n            <S.YellowBtnCustom>COMMENT</S.YellowBtnCustom>\r\n          </S.CommentForm>\r\n        </S.CommentWrapper>\r\n      )}\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}