{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\layout\\\\header\\\\Toggle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAppDispatch } from '../../hooks/reduxHook';\nimport { changeTheme } from '../../store/slice/themeSlice';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toggle = _ref => {\n  _s();\n  let {\n    themeHandler\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const [isChecked, setIsChecked] = useState(false);\n  const handleToggle = () => {\n    console.log('here');\n    const newCheckedState = !isChecked;\n    setIsChecked(newCheckedState);\n    dispatch(changeTheme());\n  };\n  return /*#__PURE__*/_jsxDEV(StyledToggle, {\n    onClick: handleToggle,\n    isChecked: isChecked,\n    children: /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n      isChecked: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Toggle, \"gYY8XehC+vFQmG8MpRgEgogNiq4=\", false, function () {\n  return [useAppDispatch];\n});\n_c = Toggle;\nconst StyledToggle = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 60px;\n  height: 34px;\n  border-radius: 34px;\n  cursor: pointer;\n  background-color: ${props => props.isChecked ? props.theme.themeStyle.cardColor : '#ccc'};\n  transition: background-color 0.3s;\n`;\n_c2 = StyledToggle;\nconst ToggleSwitch = styled.div`\n  position: absolute;\n  top: 2px;\n  //밑을 dark,ligth theme으로 변경하면 될듯?\n  left: ${props => props.isChecked ? '30px' : '2px'};\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #fff;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.3);\n  transition: left 0.3s;\n`;\n_c3 = ToggleSwitch;\nexport default Toggle;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Toggle\");\n$RefreshReg$(_c2, \"StyledToggle\");\n$RefreshReg$(_c3, \"ToggleSwitch\");","map":{"version":3,"names":["React","useState","useAppDispatch","changeTheme","styled","jsxDEV","_jsxDEV","Toggle","_ref","_s","themeHandler","dispatch","isChecked","setIsChecked","handleToggle","console","log","newCheckedState","StyledToggle","onClick","children","ToggleSwitch","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","props","theme","themeStyle","cardColor","_c2","_c3","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/layout/header/Toggle.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { useAppDispatch } from '../../hooks/reduxHook';\r\nimport { changeTheme } from '../../store/slice/themeSlice';\r\n\r\nimport styled from 'styled-components';\r\n\r\ninterface ToggleProps {\r\n  themeHandler: () => void;\r\n}\r\n\r\nconst Toggle: React.FC<ToggleProps> = ({ themeHandler }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    console.log('here');\r\n    const newCheckedState = !isChecked;\r\n    setIsChecked(newCheckedState);\r\n    dispatch(changeTheme());\r\n  };\r\n\r\n  return (\r\n    <StyledToggle onClick={handleToggle} isChecked={isChecked}>\r\n      <ToggleSwitch isChecked={isChecked} />\r\n    </StyledToggle>\r\n  );\r\n};\r\n\r\nconst StyledToggle = styled.div<{ isChecked: boolean }>`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 60px;\r\n  height: 34px;\r\n  border-radius: 34px;\r\n  cursor: pointer;\r\n  background-color: ${(props) => (props.isChecked ? props.theme.themeStyle.cardColor : '#ccc')};\r\n  transition: background-color 0.3s;\r\n`;\r\n\r\nconst ToggleSwitch = styled.div<{ isChecked: boolean }>`\r\n  position: absolute;\r\n  top: 2px;\r\n  //밑을 dark,ligth theme으로 변경하면 될듯?\r\n  left: ${(props) => (props.isChecked ? '30px' : '2px')};\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.3);\r\n  transition: left 0.3s;\r\n`;\r\n\r\nexport default Toggle;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,WAAW,QAAQ,8BAA8B;AAE1D,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvC,MAAMC,MAA6B,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EACrD,MAAMG,QAAQ,GAAGT,cAAc,CAAC,CAAC;EAEjC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,MAAMC,eAAe,GAAG,CAACL,SAAS;IAClCC,YAAY,CAACI,eAAe,CAAC;IAC7BN,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACEG,OAAA,CAACY,YAAY;IAACC,OAAO,EAAEL,YAAa;IAACF,SAAS,EAAEA,SAAU;IAAAQ,QAAA,eACxDd,OAAA,CAACe,YAAY;MAACT,SAAS,EAAEA;IAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEnB,CAAC;AAAChB,EAAA,CAjBIF,MAA6B;EAAA,QAChBL,cAAc;AAAA;AAAAwB,EAAA,GAD3BnB,MAA6B;AAmBnC,MAAMW,YAAY,GAAGd,MAAM,CAACuB,GAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAuBC,KAAK,IAAMA,KAAK,CAAChB,SAAS,GAAGgB,KAAK,CAACC,KAAK,CAACC,UAAU,CAACC,SAAS,GAAG,MAAQ;AAC/F;AACA,CAAC;AAACC,GAAA,GATId,YAAY;AAWlB,MAAMG,YAAY,GAAGjB,MAAM,CAACuB,GAA4B;AACxD;AACA;AACA;AACA,UAAWC,KAAK,IAAMA,KAAK,CAAChB,SAAS,GAAG,MAAM,GAAG,KAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,GAAA,GAXIZ,YAAY;AAalB,eAAed,MAAM;AAAC,IAAAmB,EAAA,EAAAM,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}