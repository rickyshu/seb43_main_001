{"ast":null,"code":"var _s = $RefreshSig$();\nimport jwtDecode from 'jwt-decode';\n\n// redux\nimport { useAppSelector } from '../hooks/reduxHook';\n\n// !: types로 이동해야 함!\n\nexport const getUserIdFromAccessToken = () => {\n  _s();\n  const token = useAppSelector(state => state.login.accessToken);\n  if (token !== null) {\n    return jwtDecode(token).userId;\n  }\n  return undefined;\n};\n_s(getUserIdFromAccessToken, \"lUUOEs3r5j8+ILJaqVL934+ziqo=\", false, function () {\n  return [useAppSelector];\n});","map":{"version":3,"names":["jwtDecode","useAppSelector","getUserIdFromAccessToken","_s","token","state","login","accessToken","userId","undefined"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/utils/getUserIdFromAccessToken.ts"],"sourcesContent":["import jwtDecode from 'jwt-decode';\r\n\r\n// redux\r\nimport { useAppSelector } from '../hooks/reduxHook';\r\n\r\n// !: types로 이동해야 함!\r\ntype MyToken = {\r\n  userId: number;\r\n  exp: number;\r\n  iat: number;\r\n};\r\n\r\nexport const getUserIdFromAccessToken = () => {\r\n  const token = useAppSelector((state) => state.login.accessToken);\r\n\r\n  if (token !== null) {\r\n    return jwtDecode<MyToken>(token).userId;\r\n  }\r\n  return undefined;\r\n};\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;;AAElC;AACA,SAASC,cAAc,QAAQ,oBAAoB;;AAEnD;;AAOA,OAAO,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5C,MAAMC,KAAK,GAAGH,cAAc,CAAEI,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,WAAW,CAAC;EAEhE,IAAIH,KAAK,KAAK,IAAI,EAAE;IAClB,OAAOJ,SAAS,CAAUI,KAAK,CAAC,CAACI,MAAM;EACzC;EACA,OAAOC,SAAS;AAClB,CAAC;AAACN,EAAA,CAPWD,wBAAwB;EAAA,QACrBD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}