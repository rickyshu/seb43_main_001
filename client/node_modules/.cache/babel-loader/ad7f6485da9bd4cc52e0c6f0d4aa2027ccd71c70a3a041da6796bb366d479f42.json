{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\components\\\\Detail\\\\Comment.tsx\",\n  _s = $RefreshSig$();\nimport * as S from './Comment.style';\n// react hooks\nimport React, { useState } from 'react';\n\n// react component\nimport CommentItem from './CommentItem';\nimport Loading from '../common/Loading';\n\n// custom hooks\nimport { useGetDetailPageComment } from '../../hooks/useDetailPageComment';\n\n// types\n\n// react-query\nimport { useQueryClient, useMutation } from '@tanstack/react-query';\n\n// react-router-dom\nimport { useParams } from 'react-router-dom';\n\n// axios\nimport axios from 'axios';\n\n// 상세 페이지 포트폴리오 댓글 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment() {\n  _s();\n  const [comments, setComments] = useState('');\n  const {\n    id\n  } = useParams();\n\n  // !: portfolioId를 넣어야 한다. id 값은 무조건 존재할 수 밖에 없음?\n  const {\n    isLoading,\n    data\n  } = useGetDetailPageComment(id);\n  const newComment = {\n    portfolioCommentId: 6,\n    portfolioId: 6,\n    userName: 'test',\n    content: comments,\n    createdAt: '2023-05-08T14:20:53.326328',\n    updatedAt: '2023-05-08T14:20:53.326328'\n  };\n  const queryClient = useQueryClient();\n\n  // !: any 타입 변경이 필요하다! post이기 때문에 다른 방식으로 진행될듯!\n  // !: 추가 검색이 필요하다.\n\n  const newCommentMutation = useMutation({\n    mutationFn: newComment => {\n      return axios.post('http://localhost:3003/data', {\n        ...newComment\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries(['comment']);\n    },\n    onError: error => {\n      console.log(error);\n    }\n  });\n  const handleSubmit = event => {\n    event.preventDefault();\n    newCommentMutation.mutate(newComment);\n    setComments('');\n  };\n  const handleCommentChange = event => {\n    setComments(event.target.value);\n  };\n\n  // !: data가 없을 때 어떻게 표시되는지 꼭 확인해야 한다.\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(S.CommentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(S.CommentShow, {\n        children: data === null || data === void 0 ? void 0 : data.data.map(comment => {\n          const {\n            userId,\n            content,\n            createdAt,\n            userName,\n            portfolioCommentId,\n            portfolioId\n          } = comment;\n          return /*#__PURE__*/_jsxDEV(CommentItem, {\n            userId: userId,\n            content: content,\n            createdAt: createdAt,\n            userName: userName,\n            portfolioCommentId: portfolioCommentId,\n            portfolioId: portfolioId\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.CommentForm, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(S.CommentArea, {\n          placeholder: \"Enter your comment here\",\n          value: comments,\n          onChange: handleCommentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.YellowBtnCustom, {\n          children: \"COMMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"ZcKbEodDqlNKZssTqVuGEKhZ03A=\", false, function () {\n  return [useParams, useGetDetailPageComment, useQueryClient, useMutation];\n});\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["S","React","useState","CommentItem","Loading","useGetDetailPageComment","useQueryClient","useMutation","useParams","axios","jsxDEV","_jsxDEV","Comment","_s","comments","setComments","id","isLoading","data","newComment","portfolioCommentId","portfolioId","userName","content","createdAt","updatedAt","queryClient","newCommentMutation","mutationFn","post","onSuccess","invalidateQueries","onError","error","console","log","handleSubmit","event","preventDefault","mutate","handleCommentChange","target","value","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","CommentWrapper","CommentShow","map","comment","userId","CommentForm","onSubmit","CommentArea","placeholder","onChange","YellowBtnCustom","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/components/Detail/Comment.tsx"],"sourcesContent":["import * as S from './Comment.style';\r\n// react hooks\r\nimport React, { useState } from 'react';\r\n\r\n// react component\r\nimport CommentItem from './CommentItem';\r\nimport Loading from '../common/Loading';\r\n\r\n// custom hooks\r\nimport { useGetDetailPageComment } from '../../hooks/useDetailPageComment';\r\n\r\n// types\r\nimport { GetPortfolioCommentById } from '../../types/index';\r\n\r\n// react-query\r\nimport { useQueryClient, useMutation } from '@tanstack/react-query';\r\n\r\n// react-router-dom\r\nimport { useParams } from 'react-router-dom';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\n// 상세 페이지 포트폴리오 댓글 컴포넌트\r\nfunction Comment() {\r\n  const [comments, setComments] = useState<string>('');\r\n\r\n  const { id } = useParams();\r\n\r\n  // !: portfolioId를 넣어야 한다. id 값은 무조건 존재할 수 밖에 없음?\r\n  const { isLoading, data } = useGetDetailPageComment(id!);\r\n\r\n  const newComment = {\r\n    portfolioCommentId: 6,\r\n    portfolioId: 6,\r\n    userName: 'test',\r\n    content: comments,\r\n    createdAt: '2023-05-08T14:20:53.326328',\r\n    updatedAt: '2023-05-08T14:20:53.326328',\r\n  };\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  // !: any 타입 변경이 필요하다! post이기 때문에 다른 방식으로 진행될듯!\r\n  // !: 추가 검색이 필요하다.\r\n\r\n  const newCommentMutation = useMutation({\r\n    mutationFn: (newComment: any) => {\r\n      return axios.post('http://localhost:3003/data', {\r\n        ...newComment,\r\n      });\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['comment']);\r\n    },\r\n    onError: (error) => {\r\n      console.log(error);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    newCommentMutation.mutate(newComment);\r\n    setComments('');\r\n  };\r\n\r\n  const handleCommentChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setComments(event.target.value);\r\n  };\r\n\r\n  // !: data가 없을 때 어떻게 표시되는지 꼭 확인해야 한다.\r\n  return (\r\n    <S.Container>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <S.CommentWrapper>\r\n          <S.CommentShow>\r\n            {data?.data.map((comment: GetPortfolioCommentById) => {\r\n              const { userId, content, createdAt, userName, portfolioCommentId, portfolioId } =\r\n                comment;\r\n              return (\r\n                <CommentItem\r\n                  key={id}\r\n                  userId={userId}\r\n                  content={content}\r\n                  createdAt={createdAt}\r\n                  userName={userName}\r\n                  portfolioCommentId={portfolioCommentId}\r\n                  portfolioId={portfolioId}\r\n                />\r\n              );\r\n            })}\r\n          </S.CommentShow>\r\n          <S.CommentForm onSubmit={handleSubmit}>\r\n            <S.CommentArea\r\n              placeholder='Enter your comment here'\r\n              value={comments}\r\n              onChange={handleCommentChange}\r\n            />\r\n            <S.YellowBtnCustom>COMMENT</S.YellowBtnCustom>\r\n          </S.CommentForm>\r\n        </S.CommentWrapper>\r\n      )}\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}