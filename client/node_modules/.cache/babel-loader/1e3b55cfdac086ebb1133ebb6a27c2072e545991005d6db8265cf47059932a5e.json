{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\components\\\\Portfolio\\\\ImgBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as S from './ImgBox.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImgBox = _ref => {\n  _s();\n  let {\n    text\n  } = _ref;\n  const [imgName, setImgName] = useState('');\n  return /*#__PURE__*/_jsxDEV(S.ImgContainer, {\n    children: [/*#__PURE__*/_jsxDEV(S.Title, {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.ImgSelector, {\n      children: [imgName ? /*#__PURE__*/_jsxDEV(S.ImgName, {\n        children: imgName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(S.ImgName, {\n        className: \"gray-font\",\n        children: '사진을 선택해주세요'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.ImgInput, {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"file\",\n        id: \"file\",\n        onChange: e => {\n          var _e$currentTarget$file;\n          if ((_e$currentTarget$file = e.currentTarget.files) !== null && _e$currentTarget$file !== void 0 && _e$currentTarget$file[0]) {\n            const file = e.currentTarget.files[0];\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = event => {\n              setImgName(file.name);\n            };\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(ImgBox, \"B13jIcqRZ/6oSwmf/nZK4E6NV7E=\");\n_c = ImgBox;\nexport default ImgBox;\nvar _c;\n$RefreshReg$(_c, \"ImgBox\");","map":{"version":3,"names":["React","useState","S","jsxDEV","_jsxDEV","ImgBox","_ref","_s","text","imgName","setImgName","ImgContainer","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","ImgSelector","ImgName","className","ImgInput","htmlFor","type","id","onChange","e","_e$currentTarget$file","currentTarget","files","file","reader","FileReader","readAsDataURL","onloadend","event","name","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/components/Portfolio/ImgBox.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as S from './ImgBox.style';\r\n\r\ntype ImgBoxProps = {\r\n  text: string;\r\n};\r\n\r\nconst ImgBox: React.FC<ImgBoxProps> = ({ text }) => {\r\n  const [imgName, setImgName] = useState<string>('');\r\n\r\n  return (\r\n    <S.ImgContainer>\r\n      <S.Title>{text}</S.Title>\r\n      <S.ImgSelector>\r\n        {imgName ? (\r\n          <S.ImgName>{imgName}</S.ImgName>\r\n        ) : (\r\n          <S.ImgName className='gray-font'>{'사진을 선택해주세요'}</S.ImgName>\r\n        )}\r\n        <S.ImgInput htmlFor='file'>\r\n          <span>업로드</span>\r\n        </S.ImgInput>\r\n        <input\r\n          type='file'\r\n          className='file'\r\n          id='file'\r\n          onChange={(e) => {\r\n            if (e.currentTarget.files?.[0]) {\r\n              const file = e.currentTarget.files[0];\r\n              const reader = new FileReader();\r\n              reader.readAsDataURL(file);\r\n              reader.onloadend = (event) => {\r\n                setImgName(file.name);\r\n              };\r\n            }\r\n          }}\r\n        />\r\n      </S.ImgSelector>\r\n    </S.ImgContainer>\r\n  );\r\n};\r\n\r\nexport default ImgBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,CAAC,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMpC,MAAMC,MAA6B,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAF,IAAA;EAC7C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAElD,oBACEG,OAAA,CAACF,CAAC,CAACS,YAAY;IAAAC,QAAA,gBACbR,OAAA,CAACF,CAAC,CAACW,KAAK;MAAAD,QAAA,EAAEJ;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACzBb,OAAA,CAACF,CAAC,CAACgB,WAAW;MAAAN,QAAA,GACXH,OAAO,gBACNL,OAAA,CAACF,CAAC,CAACiB,OAAO;QAAAP,QAAA,EAAEH;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,gBAEhCb,OAAA,CAACF,CAAC,CAACiB,OAAO;QAACC,SAAS,EAAC,WAAW;QAAAR,QAAA,EAAE;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3D,eACDb,OAAA,CAACF,CAAC,CAACmB,QAAQ;QAACC,OAAO,EAAC,MAAM;QAAAV,QAAA,eACxBR,OAAA;UAAAQ,QAAA,EAAM;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACbb,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXH,SAAS,EAAC,MAAM;QAChBI,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAGC,CAAC,IAAK;UAAA,IAAAC,qBAAA;UACf,KAAAA,qBAAA,GAAID,CAAC,CAACE,aAAa,CAACC,KAAK,cAAAF,qBAAA,eAArBA,qBAAA,CAAwB,CAAC,CAAC,EAAE;YAC9B,MAAMG,IAAI,GAAGJ,CAAC,CAACE,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;YACrC,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;YAC/BD,MAAM,CAACE,aAAa,CAACH,IAAI,CAAC;YAC1BC,MAAM,CAACG,SAAS,GAAIC,KAAK,IAAK;cAC5BzB,UAAU,CAACoB,IAAI,CAACM,IAAI,CAAC;YACvB,CAAC;UACH;QACF;MAAE;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAErB,CAAC;AAACV,EAAA,CAjCIF,MAA6B;AAAAgC,EAAA,GAA7BhC,MAA6B;AAmCnC,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}