{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\components\\\\Detail\\\\CommentItem.tsx\",\n  _s = $RefreshSig$();\nimport * as S from './CommentItem.style';\n\n// react hooks\nimport { useState } from 'react';\n\n// react-query\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\n\n// axios\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 상세 페이지 포트폴리오 댓글 아이템 컴포넌트\nfunction CommentItem(_ref) {\n  _s();\n  let {\n    content,\n    createdAt,\n    userName,\n    userId,\n    portfolioCommentId,\n    portfolioId\n  } = _ref;\n  const [onEdit, setOnEdit] = useState(false);\n  const [editInput, setEditInput] = useState('');\n  const queryClient = useQueryClient();\n\n  // types에 따로 지정해야 함!\n  const patchComment = {\n    portfolioCommentId,\n    userName,\n    portfolioId,\n    content: editInput\n  };\n  const upDateMutation = useMutation({\n    // 위 타입을 지정해줘야 함!\n    mutationFn: patchComment => {\n      return axios.patch(`http://localhost:3003/data/${userId}`, {\n        ...patchComment\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries(['comment']);\n    },\n    onError: error => {\n      // *: error 헨들링 하기\n      console.log(error);\n    }\n  });\n\n  // ?: 에러 처리를 userId 값으로 처리해야 함!\n  const handleComfirm = () => {\n    // upDateMutation.mutate(patchComment);\n    setOnEdit(false);\n  };\n  const handleEditArea = event => {\n    setEditInput(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.Update, {\n      children: [/*#__PURE__*/_jsxDEV(S.DelBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !onEdit && /*#__PURE__*/_jsxDEV(S.EditBtn, {\n        onClick: () => setOnEdit(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), onEdit && /*#__PURE__*/_jsxDEV(S.ComfirmBtn, {\n        onClick: handleComfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), onEdit ? /*#__PURE__*/_jsxDEV(S.EditArea, {\n      placeholder: \"Enter your comment here\",\n      value: editInput,\n      onChange: handleEditArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(S.Content, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(S.CreateAt, {\n      children: [createdAt, \" \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentItem, \"wXeaYZtUrn0JAl7q8rMUi2r1c80=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = CommentItem;\nexport default CommentItem;\nvar _c;\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"names":["S","useState","useMutation","useQueryClient","axios","jsxDEV","_jsxDEV","CommentItem","_ref","_s","content","createdAt","userName","userId","portfolioCommentId","portfolioId","onEdit","setOnEdit","editInput","setEditInput","queryClient","patchComment","upDateMutation","mutationFn","patch","onSuccess","invalidateQueries","onError","error","console","log","handleComfirm","handleEditArea","event","target","value","Container","children","Update","DelBtn","fileName","_jsxFileName","lineNumber","columnNumber","EditBtn","onClick","ComfirmBtn","EditArea","placeholder","onChange","Content","CreateAt","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/components/Detail/CommentItem.tsx"],"sourcesContent":["import * as S from './CommentItem.style';\r\n\r\n// react hooks\r\nimport { useState } from 'react';\r\n\r\n// react-query\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\n\r\n// axios\r\nimport axios from 'axios';\r\n\r\ntype CommentItemProps = {\r\n  portfolioId: number;\r\n  portfolioCommentId: number;\r\n  userId: number;\r\n  content: string;\r\n  createdAt: string;\r\n  userName: string;\r\n};\r\n\r\n// 상세 페이지 포트폴리오 댓글 아이템 컴포넌트\r\nfunction CommentItem({\r\n  content,\r\n  createdAt,\r\n  userName,\r\n  userId,\r\n  portfolioCommentId,\r\n  portfolioId,\r\n}: CommentItemProps) {\r\n  const [onEdit, setOnEdit] = useState<boolean>(false);\r\n  const [editInput, setEditInput] = useState<string>('');\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  // types에 따로 지정해야 함!\r\n  const patchComment = {\r\n    portfolioCommentId,\r\n    userName,\r\n    portfolioId,\r\n    content: editInput,\r\n  };\r\n\r\n  const upDateMutation = useMutation({\r\n    // 위 타입을 지정해줘야 함!\r\n    mutationFn: (patchComment: any) => {\r\n      return axios.patch(`http://localhost:3003/data/${userId}`, {\r\n        ...patchComment,\r\n      });\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['comment']);\r\n    },\r\n    onError: (error) => {\r\n      // *: error 헨들링 하기\r\n      console.log(error);\r\n    },\r\n  });\r\n\r\n  // ?: 에러 처리를 userId 값으로 처리해야 함!\r\n  const handleComfirm = () => {\r\n    // upDateMutation.mutate(patchComment);\r\n    setOnEdit(false);\r\n  };\r\n\r\n  const handleEditArea = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setEditInput(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Update>\r\n        <S.DelBtn />\r\n        {!onEdit && <S.EditBtn onClick={() => setOnEdit(true)} />}\r\n        {onEdit && <S.ComfirmBtn onClick={handleComfirm} />}\r\n      </S.Update>\r\n      {onEdit ? (\r\n        <S.EditArea\r\n          placeholder='Enter your comment here'\r\n          value={editInput}\r\n          onChange={handleEditArea}\r\n        />\r\n      ) : (\r\n        <S.Content>{content}</S.Content>\r\n      )}\r\n      <S.CreateAt>\r\n        {createdAt} {userName}\r\n      </S.CreateAt>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default CommentItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}