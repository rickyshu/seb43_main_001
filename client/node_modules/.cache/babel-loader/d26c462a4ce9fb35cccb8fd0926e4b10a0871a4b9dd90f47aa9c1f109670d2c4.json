{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\hoinlee\\\\Desktop\\\\HOIN\\\\codestates\\\\main-project\\\\seb43_main_001\\\\client\\\\src\\\\pages\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport axios from 'axios';\nimport { useAppSelector, useAppDispatch } from '../hooks/reduxHook';\nimport { login } from '../store/slice/loginSlice';\nimport Banner from '../components/Home/Banner';\nimport Sort from '../components/Home/Sort';\nimport Search from '../components/Home/Search';\nimport Card from '../components/common/Card';\nimport ArrowUp from '../components/Home/ArrowUp';\nimport Loading from '../components/common/Loading';\nimport * as S from './Home.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [orderName, setOrderName] = useState('latest');\n  const dispatch = useAppDispatch();\n  const isLogin = useAppSelector(state => state.login.isLogin);\n\n  // * 마운트 될때만 요청\n  // * 쿼리스트링은 옵션에 따라 계속 바뀌어야 함\n\n  // TODO: 이 부분 분리하기\n  useEffect(() => {\n    if (!isLogin) {\n      // const currentURL = window.location.href;\n      const currentURL = document.location.search;\n      const params = new URLSearchParams(currentURL);\n      const accessToken = params.get('access_token');\n      const refreshToken = params.get('refresh_token');\n      if (accessToken && refreshToken) {\n        dispatch(login({\n          accessToken,\n          refreshToken\n        }));\n        localStorage.setItem('accessToken', JSON.stringify(accessToken));\n      }\n    }\n  }, [isLogin, dispatch]);\n\n  // const BASE_URL = 'http://43.201.157.191:8080';\n  const BASE_URL = 'http://localhost:8000';\n\n  // 데이터 패칭\n  // TODO: 에러 처리 필요\n  const {\n    data,\n    isError,\n    isFetching,\n    error,\n    status,\n    fetchNextPage,\n    hasNextPage\n  } = useInfiniteQuery(['portfolios'], _ref => {\n    let {\n      pageParam = 1\n    } = _ref;\n    return axios.get(BASE_URL + `/portfolios?_page=${pageParam}&_limit=2`).then(res => {\n      return {\n        // 실제 데이터\n        portfolio: res.data,\n        // 반환 값에 현재 페이지를 넘겨주자\n        currentPage: pageParam,\n        // 페이지가 마지막인지 알려주는 서버에서 넘겨준 true/false 값\n        isLast: res.data.at(-1).isLast\n      };\n    });\n  }, {\n    getNextPageParam: (lastPage, pages) => {\n      if (!lastPage.isLast) {\n        return lastPage.currentPage + 1;\n      }\n      return undefined;\n    }\n  });\n  const targetRef = useRef(null);\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: '100px',\n      threshold: 0.3\n    };\n    const handleIntersect = (entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && !isFetching && hasNextPage) {\n          fetchNextPage();\n        }\n      });\n    };\n    const observer = new IntersectionObserver(handleIntersect, options);\n    if (targetRef.current) {\n      observer.observe(targetRef.current);\n    }\n    return () => {\n      if (targetRef.current) {\n        observer.unobserve(targetRef.current);\n      }\n    };\n  }, [fetchNextPage, hasNextPage, isFetching]);\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sort, {\n      setOrderName: setOrderName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.ContentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.CardWrapper, {\n        children: [data === null || data === void 0 ? void 0 : data.pages.map(page => page.portfolio.map(item => /*#__PURE__*/_jsxDEV(Card, {\n          portfolioId: item.portfolioId,\n          title: item.title,\n          description: item.description,\n          views: item.views,\n          userId: item.userId,\n          name: item.name\n        }, item.portfolioId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this))), isFetching && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 26\n        }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC5D0\\uB7EC \\uBC1C\\uC0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 23\n        }, this), !hasNextPage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC5EC\\uAE30\\uAC00 \\uB9C8\\uC9C0\\uB9C9\\uC774\\uC5D0\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(S.Target, {\n          ref: targetRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrowUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"dooFJw1z2mwFEq3HAemUDG26C48=\", false, function () {\n  return [useAppDispatch, useAppSelector, useInfiniteQuery];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useRef","useInfiniteQuery","axios","useAppSelector","useAppDispatch","login","Banner","Sort","Search","Card","ArrowUp","Loading","S","jsxDEV","_jsxDEV","Home","_s","orderName","setOrderName","dispatch","isLogin","state","currentURL","document","location","search","params","URLSearchParams","accessToken","get","refreshToken","localStorage","setItem","JSON","stringify","BASE_URL","data","isError","isFetching","error","status","fetchNextPage","hasNextPage","_ref","pageParam","then","res","portfolio","currentPage","isLast","at","getNextPageParam","lastPage","pages","undefined","targetRef","options","root","rootMargin","threshold","handleIntersect","entries","observer","forEach","entry","isIntersecting","IntersectionObserver","current","observe","unobserve","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","ContentWrapper","CardWrapper","map","page","item","portfolioId","title","description","views","userId","name","Target","ref","_c","$RefreshReg$"],"sources":["D:/Users/hoinlee/Desktop/HOIN/codestates/main-project/seb43_main_001/client/src/pages/Home.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useQuery, useInfiniteQuery } from '@tanstack/react-query';\r\nimport axios from 'axios';\r\n\r\nimport { useAppSelector, useAppDispatch } from '../hooks/reduxHook';\r\nimport { login } from '../store/slice/loginSlice';\r\n\r\nimport Banner from '../components/Home/Banner';\r\nimport Sort from '../components/Home/Sort';\r\nimport Search from '../components/Home/Search';\r\nimport Card from '../components/common/Card';\r\nimport ArrowUp from '../components/Home/ArrowUp';\r\nimport Loading from '../components/common/Loading';\r\n\r\nimport * as S from './Home.style';\r\n\r\ntype PortfolioList = {\r\n  content: string;\r\n  description: string;\r\n  distributionLink: string;\r\n  gitLink: string;\r\n  name: string;\r\n  portfolioId: string;\r\n  title: string;\r\n  updatedAt: number[];\r\n  userId: number;\r\n  views: number;\r\n};\r\n\r\nfunction Home() {\r\n  const [orderName, setOrderName] = useState('latest');\r\n  const dispatch = useAppDispatch();\r\n  const isLogin = useAppSelector((state) => state.login.isLogin);\r\n\r\n  // * 마운트 될때만 요청\r\n  // * 쿼리스트링은 옵션에 따라 계속 바뀌어야 함\r\n\r\n  // TODO: 이 부분 분리하기\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      // const currentURL = window.location.href;\r\n      const currentURL = document.location.search;\r\n      const params = new URLSearchParams(currentURL);\r\n\r\n      const accessToken = params.get('access_token');\r\n      const refreshToken = params.get('refresh_token');\r\n\r\n      if (accessToken && refreshToken) {\r\n        dispatch(login({ accessToken, refreshToken }));\r\n        localStorage.setItem('accessToken', JSON.stringify(accessToken));\r\n      }\r\n    }\r\n  }, [isLogin, dispatch]);\r\n\r\n  // const BASE_URL = 'http://43.201.157.191:8080';\r\n  const BASE_URL = 'http://localhost:8000';\r\n\r\n  // 데이터 패칭\r\n  // TODO: 에러 처리 필요\r\n  const { data, isError, isFetching, error, status, fetchNextPage, hasNextPage } = useInfiniteQuery(\r\n    ['portfolios'],\r\n    ({ pageParam = 1 }) => {\r\n      return axios.get(BASE_URL + `/portfolios?_page=${pageParam}&_limit=2`).then((res) => {\r\n        return {\r\n          // 실제 데이터\r\n          portfolio: res.data,\r\n          // 반환 값에 현재 페이지를 넘겨주자\r\n          currentPage: pageParam,\r\n          // 페이지가 마지막인지 알려주는 서버에서 넘겨준 true/false 값\r\n          isLast: res.data.at(-1).isLast,\r\n        };\r\n      });\r\n    },\r\n    {\r\n      getNextPageParam: (lastPage, pages) => {\r\n        if (!lastPage.isLast) {\r\n          return lastPage.currentPage + 1;\r\n        }\r\n        return undefined;\r\n      },\r\n    },\r\n  );\r\n\r\n  const targetRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      root: null,\r\n      rootMargin: '100px',\r\n      threshold: 0.3,\r\n    };\r\n\r\n    const handleIntersect: IntersectionObserverCallback = (\r\n      entries: IntersectionObserverEntry[],\r\n      observer: IntersectionObserver,\r\n    ) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting && !isFetching && hasNextPage) {\r\n          fetchNextPage();\r\n        }\r\n      });\r\n    };\r\n\r\n    const observer = new IntersectionObserver(handleIntersect, options);\r\n\r\n    if (targetRef.current) {\r\n      observer.observe(targetRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (targetRef.current) {\r\n        observer.unobserve(targetRef.current);\r\n      }\r\n    };\r\n  }, [fetchNextPage, hasNextPage, isFetching]);\r\n\r\n  return (\r\n    <S.Container>\r\n      <Banner />\r\n      <Sort setOrderName={setOrderName} />\r\n      <S.ContentWrapper>\r\n        <Search />\r\n        <S.CardWrapper>\r\n          {/* //? data가 undefined라면 에러 발생하는지....? */}\r\n          {data?.pages.map((page) =>\r\n            page.portfolio.map((item: PortfolioList) => (\r\n              <Card\r\n                key={item.portfolioId}\r\n                portfolioId={item.portfolioId}\r\n                title={item.title}\r\n                description={item.description}\r\n                views={item.views}\r\n                userId={item.userId}\r\n                name={item.name}\r\n              />\r\n            )),\r\n          )}\r\n          {isFetching && <Loading />}\r\n          {isError && <div>에러 발생</div>}\r\n          {!hasNextPage && <div>여기가 마지막이에요.</div>}\r\n          <S.Target ref={targetRef} />\r\n        </S.CardWrapper>\r\n        <ArrowUp />\r\n      </S.ContentWrapper>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}